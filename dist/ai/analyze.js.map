{"version":3,"file":"analyze.js","sources":["../../src/ai/analyze.js"],"sourcesContent":["/**\n * aartisan - AI Component Analysis\n * \n * Analyzes React components using LLMs to extract semantic information\n * and enhance them for AI agent understanding.\n */\nimport fs from 'fs-extra';\nimport path from 'path';\nimport * as parser from '@babel/parser';\nimport traverse from '@babel/traverse';\nimport * as t from '@babel/types';\nimport generate from '@babel/generator';\nimport { createMetadata } from '../core/metadata.js';\n\n// Import AI providers (placeholder for now)\n// import { analyzeWithGemini } from './gemini.js';\n// import { analyzeWithCohere } from './cohere.js';\n\n/**\n * Analyzes React components in a directory\n * @param {string} sourceDir - Source directory\n * @param {Object} options - Analysis options\n * @returns {Promise<Object>} Analysis results\n */\nexport async function analyzeComponents(sourceDir, options = {}) {\n  const files = await findReactFiles(sourceDir);\n  \n  const results = {\n    totalFiles: files.length,\n    analyzedComponents: 0,\n    enhancedComponents: 0,\n    components: []\n  };\n  \n  for (const file of files) {\n    const fileResults = await analyzeFile(file, options);\n    results.analyzedComponents += fileResults.analyzedComponents;\n    results.enhancedComponents += fileResults.enhancedComponents;\n    results.components.push(...fileResults.components);\n  }\n  \n  return results;\n}\n\n/**\n * Finds React files in a directory\n * @param {string} sourceDir - Source directory\n * @returns {Promise<string[]>} List of file paths\n */\nasync function findReactFiles(sourceDir) {\n  const reactExtensions = ['.jsx', '.tsx'];\n  const files = [];\n  \n  // Recursively find files\n  async function findFiles(dir) {\n    const entries = await fs.readdir(dir, { withFileTypes: true });\n    \n    for (const entry of entries) {\n      const fullPath = path.join(dir, entry.name);\n      \n      if (entry.isDirectory()) {\n        // Skip node_modules\n        if (entry.name !== 'node_modules') {\n          await findFiles(fullPath);\n        }\n      } else if (entry.isFile()) {\n        // Check extension\n        const ext = path.extname(entry.name);\n        if (reactExtensions.includes(ext)) {\n          files.push(fullPath);\n        }\n      }\n    }\n  }\n  \n  await findFiles(sourceDir);\n  return files;\n}\n\n/**\n * Analyzes a single React file\n * @param {string} filePath - File path\n * @param {Object} options - Analysis options\n * @returns {Promise<Object>} Analysis results\n */\nasync function analyzeFile(filePath, options) {\n  const fileContent = await fs.readFile(filePath, 'utf-8');\n  \n  // Parse the file\n  const ast = parser.parse(fileContent, {\n    sourceType: 'module',\n    plugins: ['jsx', 'typescript']\n  });\n  \n  const results = {\n    filePath,\n    analyzedComponents: 0,\n    enhancedComponents: 0,\n    components: []\n  };\n  \n  // Find components\n  traverse.default(ast, {\n    // Function components\n    FunctionDeclaration(path) {\n      if (isReactComponent(path)) {\n        const component = extractComponent(path, filePath);\n        if (component) {\n          results.analyzedComponents++;\n          results.components.push(component);\n        }\n      }\n    },\n    // Arrow function components\n    VariableDeclarator(path) {\n      if (t.isArrowFunctionExpression(path.node.init) && isReactComponent(path)) {\n        const component = extractComponent(path, filePath);\n        if (component) {\n          results.analyzedComponents++;\n          results.components.push(component);\n        }\n      }\n    }\n  });\n  \n  // For each component, analyze and enhance\n  for (const component of results.components) {\n    await enhanceWithAI(component, options);\n    results.enhancedComponents++;\n  }\n  \n  return results;\n}\n\n/**\n * Checks if a node represents a React component\n * @param {Object} path - Babel path\n * @returns {boolean} Whether it's a React component\n */\nfunction isReactComponent(path) {\n  // For function declarations\n  if (t.isFunctionDeclaration(path.node)) {\n    // Check if it returns JSX\n    let returnsJSX = false;\n    path.traverse({\n      ReturnStatement(returnPath) {\n        const returnArg = returnPath.node.argument;\n        if (t.isJSXElement(returnArg) || t.isJSXFragment(returnArg)) {\n          returnsJSX = true;\n        }\n      }\n    });\n    return returnsJSX;\n  }\n  \n  // For arrow functions\n  if (t.isVariableDeclarator(path.node) && t.isArrowFunctionExpression(path.node.init)) {\n    const body = path.node.init.body;\n    return t.isJSXElement(body) || t.isJSXFragment(body);\n  }\n  \n  return false;\n}\n\n/**\n * Extracts component information\n * @param {Object} path - Babel path\n * @param {string} filePath - File path\n * @returns {Object|null} Component information\n */\nfunction extractComponent(path, filePath) {\n  let componentName = '';\n  let componentCode = '';\n  let propTypes = {};\n  \n  // Get component name\n  if (t.isFunctionDeclaration(path.node)) {\n    componentName = path.node.id.name;\n  } else if (t.isVariableDeclarator(path.node)) {\n    componentName = path.node.id.name;\n  }\n  \n  // Skip if component doesn't have a name\n  if (!componentName) {\n    return null;\n  }\n  \n  // Get component code\n  const { code } = generate.default(path.node);\n  componentCode = code;\n  \n  // Extract props\n  const props = extractProps(path);\n  \n  return {\n    name: componentName,\n    code: componentCode,\n    filePath,\n    props,\n    metadata: createMetadata({\n      name: componentName\n    })\n  };\n}\n\n/**\n * Extracts props from a component\n * @param {Object} path - Babel path\n * @returns {Object} Props information\n */\nfunction extractProps(path) {\n  const props = {};\n  \n  // Function declaration\n  if (t.isFunctionDeclaration(path.node) && path.node.params.length > 0) {\n    const param = path.node.params[0];\n    \n    // Destructured props\n    if (t.isObjectPattern(param)) {\n      param.properties.forEach(prop => {\n        if (t.isObjectProperty(prop) && t.isIdentifier(prop.key)) {\n          props[prop.key.name] = {\n            name: prop.key.name,\n            required: false\n          };\n        }\n      });\n    }\n    // Props as object\n    else if (t.isIdentifier(param)) {\n      props['_propsObject'] = {\n        name: param.name,\n        isObject: true\n      };\n    }\n  }\n  // Arrow function\n  else if (t.isVariableDeclarator(path.node) && \n           t.isArrowFunctionExpression(path.node.init) && \n           path.node.init.params.length > 0) {\n    const param = path.node.init.params[0];\n    \n    // Destructured props\n    if (t.isObjectPattern(param)) {\n      param.properties.forEach(prop => {\n        if (t.isObjectProperty(prop) && t.isIdentifier(prop.key)) {\n          props[prop.key.name] = {\n            name: prop.key.name,\n            required: false\n          };\n        }\n      });\n    }\n    // Props as object\n    else if (t.isIdentifier(param)) {\n      props['_propsObject'] = {\n        name: param.name,\n        isObject: true\n      };\n    }\n  }\n  \n  return props;\n}\n\n/**\n * Enhances a component with AI-generated metadata\n * @param {Object} component - Component information\n * @param {Object} options - Enhancement options\n * @returns {Promise<Object>} Enhanced component\n */\nasync function enhanceWithAI(component, options) {\n  // For now, just return a simple analysis\n  // In a full implementation, this would call the LLM API\n  \n  // Placeholder analysis\n  const analysis = {\n    purpose: inferPurpose(component.name, component.code),\n    interactions: inferInteractions(component.code),\n    accessibilityLevel: 'medium',\n    complexity: 'low'\n  };\n  \n  // Enhance component metadata\n  component.metadata = createMetadata({\n    name: component.name,\n    purpose: analysis.purpose,\n    interactions: analysis.interactions,\n    semantics: {\n      accessibilityLevel: analysis.accessibilityLevel,\n      complexity: analysis.complexity\n    }\n  });\n  \n  return component;\n}\n\n/**\n * Infers purpose from component name and code\n * @param {string} name - Component name\n * @param {string} code - Component code\n * @returns {string} Inferred purpose\n */\nfunction inferPurpose(name, code) {\n  // Basic pattern matching for common component types\n  if (/button/i.test(name)) {\n    return 'action-button';\n  } else if (/card/i.test(name)) {\n    return 'display-card';\n  } else if (/list/i.test(name)) {\n    return 'list-container';\n  } else if (/form/i.test(name)) {\n    return 'input-form';\n  } else if (/input/i.test(name)) {\n    return 'input-field';\n  } else if (/nav/i.test(name)) {\n    return 'navigation';\n  } else if (/header/i.test(name)) {\n    return 'page-header';\n  } else if (/footer/i.test(name)) {\n    return 'page-footer';\n  } else if (/modal/i.test(name)) {\n    return 'modal-dialog';\n  }\n  \n  return 'ui-component';\n}\n\n/**\n * Infers possible interactions from component code\n * @param {string} code - Component code\n * @returns {string[]} Inferred interactions\n */\nfunction inferInteractions(code) {\n  const interactions = [];\n  \n  // Look for common event handlers\n  if (code.includes('onClick')) {\n    interactions.push('click');\n  }\n  if (code.includes('onChange')) {\n    interactions.push('change');\n  }\n  if (code.includes('onSubmit')) {\n    interactions.push('submit');\n  }\n  if (code.includes('onHover') || code.includes('onMouseOver')) {\n    interactions.push('hover');\n  }\n  if (code.includes('onFocus')) {\n    interactions.push('focus');\n  }\n  if (code.includes('onBlur')) {\n    interactions.push('blur');\n  }\n  \n  return interactions;\n}"],"names":["analyzeComponents","sourceDir","options","files","findReactFiles","results","totalFiles","length","analyzedComponents","enhancedComponents","components","file","fileResults","analyzeFile","push","reactExtensions","findFiles","dir","entries","fs","readdir","withFileTypes","entry","fullPath","path","join","name","isDirectory","isFile","ext","extname","includes","filePath","fileContent","readFile","ast","parser","parse","sourceType","plugins","traverse","default","FunctionDeclaration","isReactComponent","component","extractComponent","VariableDeclarator","t","isArrowFunctionExpression","node","init","enhanceWithAI","isFunctionDeclaration","returnsJSX","ReturnStatement","returnPath","returnArg","argument","isJSXElement","isJSXFragment","isVariableDeclarator","body","componentName","componentCode","id","code","generate","props","extractProps","metadata","createMetadata","params","param","isObjectPattern","properties","forEach","prop","isObjectProperty","isIdentifier","key","required","isObject","analysis","purpose","inferPurpose","interactions","inferInteractions","accessibilityLevel","complexity","semantics","test"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AASA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeA,iBAAiBA,CAACC,SAAS,EAAEC,OAAO,GAAG,EAAE,EAAE;AAC/D,EAAA,MAAMC,KAAK,GAAG,MAAMC,cAAc,CAACH,SAAS,CAAC;AAE7C,EAAA,MAAMI,OAAO,GAAG;IACdC,UAAU,EAAEH,KAAK,CAACI,MAAM;AACxBC,IAAAA,kBAAkB,EAAE,CAAC;AACrBC,IAAAA,kBAAkB,EAAE,CAAC;AACrBC,IAAAA,UAAU,EAAE;GACb;AAED,EAAA,KAAK,MAAMC,IAAI,IAAIR,KAAK,EAAE;IACxB,MAAMS,WAAW,GAAG,MAAMC,WAAW,CAACF,IAAa,CAAC;AACpDN,IAAAA,OAAO,CAACG,kBAAkB,IAAII,WAAW,CAACJ,kBAAkB;AAC5DH,IAAAA,OAAO,CAACI,kBAAkB,IAAIG,WAAW,CAACH,kBAAkB;IAC5DJ,OAAO,CAACK,UAAU,CAACI,IAAI,CAAC,GAAGF,WAAW,CAACF,UAAU,CAAC;AACpD;AAEA,EAAA,OAAOL,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAeD,cAAcA,CAACH,SAAS,EAAE;AACvC,EAAA,MAAMc,eAAe,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC;EACxC,MAAMZ,KAAK,GAAG,EAAE;;AAEhB;EACA,eAAea,SAASA,CAACC,GAAG,EAAE;IAC5B,MAAMC,OAAO,GAAG,MAAMC,EAAE,CAACC,OAAO,CAACH,GAAG,EAAE;AAAEI,MAAAA,aAAa,EAAE;AAAK,KAAC,CAAC;AAE9D,IAAA,KAAK,MAAMC,KAAK,IAAIJ,OAAO,EAAE;MAC3B,MAAMK,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACR,GAAG,EAAEK,KAAK,CAACI,IAAI,CAAC;AAE3C,MAAA,IAAIJ,KAAK,CAACK,WAAW,EAAE,EAAE;AACvB;AACA,QAAA,IAAIL,KAAK,CAACI,IAAI,KAAK,cAAc,EAAE;UACjC,MAAMV,SAAS,CAACO,QAAQ,CAAC;AAC3B;AACF,OAAC,MAAM,IAAID,KAAK,CAACM,MAAM,EAAE,EAAE;AACzB;QACA,MAAMC,GAAG,GAAGL,IAAI,CAACM,OAAO,CAACR,KAAK,CAACI,IAAI,CAAC;AACpC,QAAA,IAAIX,eAAe,CAACgB,QAAQ,CAACF,GAAG,CAAC,EAAE;AACjC1B,UAAAA,KAAK,CAACW,IAAI,CAACS,QAAQ,CAAC;AACtB;AACF;AACF;AACF;EAEA,MAAMP,SAAS,CAACf,SAAS,CAAC;AAC1B,EAAA,OAAOE,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeU,WAAWA,CAACmB,QAAQ,EAAE9B,OAAO,EAAE;EAC5C,MAAM+B,WAAW,GAAG,MAAMd,EAAE,CAACe,QAAQ,CAACF,QAAQ,EAAE,OAAO,CAAC;;AAExD;AACA,EAAA,MAAMG,GAAG,GAAGC,MAAM,CAACC,KAAK,CAACJ,WAAW,EAAE;AACpCK,IAAAA,UAAU,EAAE,QAAQ;AACpBC,IAAAA,OAAO,EAAE,CAAC,KAAK,EAAE,YAAY;AAC/B,GAAC,CAAC;AAEF,EAAA,MAAMlC,OAAO,GAAG;IACd2B,QAAQ;AACRxB,IAAAA,kBAAkB,EAAE,CAAC;AACrBC,IAAAA,kBAAkB,EAAE,CAAC;AACrBC,IAAAA,UAAU,EAAE;GACb;;AAED;AACA8B,EAAAA,QAAQ,CAACC,OAAO,CAACN,GAAG,EAAE;AACpB;IACAO,mBAAmBA,CAAClB,IAAI,EAAE;AACxB,MAAA,IAAImB,gBAAgB,CAACnB,IAAI,CAAC,EAAE;AAC1B,QAAA,MAAMoB,SAAS,GAAGC,gBAAgB,CAACrB,IAAI,EAAEQ,QAAQ,CAAC;AAClD,QAAA,IAAIY,SAAS,EAAE;UACbvC,OAAO,CAACG,kBAAkB,EAAE;AAC5BH,UAAAA,OAAO,CAACK,UAAU,CAACI,IAAI,CAAC8B,SAAS,CAAC;AACpC;AACF;KACD;AACD;IACAE,kBAAkBA,CAACtB,IAAI,EAAE;AACvB,MAAA,IAAIuB,CAAC,CAACC,yBAAyB,CAACxB,IAAI,CAACyB,IAAI,CAACC,IAAI,CAAC,IAAIP,gBAAgB,CAACnB,IAAI,CAAC,EAAE;AACzE,QAAA,MAAMoB,SAAS,GAAGC,gBAAgB,CAACrB,IAAI,EAAEQ,QAAQ,CAAC;AAClD,QAAA,IAAIY,SAAS,EAAE;UACbvC,OAAO,CAACG,kBAAkB,EAAE;AAC5BH,UAAAA,OAAO,CAACK,UAAU,CAACI,IAAI,CAAC8B,SAAS,CAAC;AACpC;AACF;AACF;AACF,GAAC,CAAC;;AAEF;AACA,EAAA,KAAK,MAAMA,SAAS,IAAIvC,OAAO,CAACK,UAAU,EAAE;AAC1C,IAAA,MAAMyC,aAAa,CAACP,SAAkB,CAAC;IACvCvC,OAAO,CAACI,kBAAkB,EAAE;AAC9B;AAEA,EAAA,OAAOJ,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASsC,gBAAgBA,CAACnB,IAAI,EAAE;AAC9B;EACA,IAAIuB,CAAC,CAACK,qBAAqB,CAAC5B,IAAI,CAACyB,IAAI,CAAC,EAAE;AACtC;IACA,IAAII,UAAU,GAAG,KAAK;IACtB7B,IAAI,CAACgB,QAAQ,CAAC;MACZc,eAAeA,CAACC,UAAU,EAAE;AAC1B,QAAA,MAAMC,SAAS,GAAGD,UAAU,CAACN,IAAI,CAACQ,QAAQ;AAC1C,QAAA,IAAIV,CAAC,CAACW,YAAY,CAACF,SAAS,CAAC,IAAIT,CAAC,CAACY,aAAa,CAACH,SAAS,CAAC,EAAE;AAC3DH,UAAAA,UAAU,GAAG,IAAI;AACnB;AACF;AACF,KAAC,CAAC;AACF,IAAA,OAAOA,UAAU;AACnB;;AAEA;AACA,EAAA,IAAIN,CAAC,CAACa,oBAAoB,CAACpC,IAAI,CAACyB,IAAI,CAAC,IAAIF,CAAC,CAACC,yBAAyB,CAACxB,IAAI,CAACyB,IAAI,CAACC,IAAI,CAAC,EAAE;IACpF,MAAMW,IAAI,GAAGrC,IAAI,CAACyB,IAAI,CAACC,IAAI,CAACW,IAAI;AAChC,IAAA,OAAOd,CAAC,CAACW,YAAY,CAACG,IAAI,CAAC,IAAId,CAAC,CAACY,aAAa,CAACE,IAAI,CAAC;AACtD;AAEA,EAAA,OAAO,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAShB,gBAAgBA,CAACrB,IAAI,EAAEQ,QAAQ,EAAE;EACxC,IAAI8B,aAAa,GAAG,EAAE;EACtB,IAAIC,aAAa,GAAG,EAAE;;AAGtB;EACA,IAAIhB,CAAC,CAACK,qBAAqB,CAAC5B,IAAI,CAACyB,IAAI,CAAC,EAAE;AACtCa,IAAAA,aAAa,GAAGtC,IAAI,CAACyB,IAAI,CAACe,EAAE,CAACtC,IAAI;GAClC,MAAM,IAAIqB,CAAC,CAACa,oBAAoB,CAACpC,IAAI,CAACyB,IAAI,CAAC,EAAE;AAC5Ca,IAAAA,aAAa,GAAGtC,IAAI,CAACyB,IAAI,CAACe,EAAE,CAACtC,IAAI;AACnC;;AAEA;EACA,IAAI,CAACoC,aAAa,EAAE;AAClB,IAAA,OAAO,IAAI;AACb;;AAEA;EACA,MAAM;AAAEG,IAAAA;GAAM,GAAGC,QAAQ,CAACzB,OAAO,CAACjB,IAAI,CAACyB,IAAI,CAAC;AAC5Cc,EAAAA,aAAa,GAAGE,IAAI;;AAEpB;AACA,EAAA,MAAME,KAAK,GAAGC,YAAY,CAAC5C,IAAI,CAAC;EAEhC,OAAO;AACLE,IAAAA,IAAI,EAAEoC,aAAa;AACnBG,IAAAA,IAAI,EAAEF,aAAa;IACnB/B,QAAQ;IACRmC,KAAK;IACLE,QAAQ,EAAEC,cAAc,CAAC;AACvB5C,MAAAA,IAAI,EAAEoC;KACP;GACF;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASM,YAAYA,CAAC5C,IAAI,EAAE;EAC1B,MAAM2C,KAAK,GAAG,EAAE;;AAEhB;AACA,EAAA,IAAIpB,CAAC,CAACK,qBAAqB,CAAC5B,IAAI,CAACyB,IAAI,CAAC,IAAIzB,IAAI,CAACyB,IAAI,CAACsB,MAAM,CAAChE,MAAM,GAAG,CAAC,EAAE;IACrE,MAAMiE,KAAK,GAAGhD,IAAI,CAACyB,IAAI,CAACsB,MAAM,CAAC,CAAC,CAAC;;AAEjC;AACA,IAAA,IAAIxB,CAAC,CAAC0B,eAAe,CAACD,KAAK,CAAC,EAAE;AAC5BA,MAAAA,KAAK,CAACE,UAAU,CAACC,OAAO,CAACC,IAAI,IAAI;AAC/B,QAAA,IAAI7B,CAAC,CAAC8B,gBAAgB,CAACD,IAAI,CAAC,IAAI7B,CAAC,CAAC+B,YAAY,CAACF,IAAI,CAACG,GAAG,CAAC,EAAE;AACxDZ,UAAAA,KAAK,CAACS,IAAI,CAACG,GAAG,CAACrD,IAAI,CAAC,GAAG;AACrBA,YAAAA,IAAI,EAAEkD,IAAI,CAACG,GAAG,CAACrD,IAAI;AACnBsD,YAAAA,QAAQ,EAAE;WACX;AACH;AACF,OAAC,CAAC;AACJ;AACA;AAAA,SACK,IAAIjC,CAAC,CAAC+B,YAAY,CAACN,KAAK,CAAC,EAAE;MAC9BL,KAAK,CAAC,cAAc,CAAC,GAAG;QACtBzC,IAAI,EAAE8C,KAAK,CAAC9C,IAAI;AAChBuD,QAAAA,QAAQ,EAAE;OACX;AACH;AACF;AACA;AAAA,OACK,IAAIlC,CAAC,CAACa,oBAAoB,CAACpC,IAAI,CAACyB,IAAI,CAAC,IACjCF,CAAC,CAACC,yBAAyB,CAACxB,IAAI,CAACyB,IAAI,CAACC,IAAI,CAAC,IAC3C1B,IAAI,CAACyB,IAAI,CAACC,IAAI,CAACqB,MAAM,CAAChE,MAAM,GAAG,CAAC,EAAE;IACzC,MAAMiE,KAAK,GAAGhD,IAAI,CAACyB,IAAI,CAACC,IAAI,CAACqB,MAAM,CAAC,CAAC,CAAC;;AAEtC;AACA,IAAA,IAAIxB,CAAC,CAAC0B,eAAe,CAACD,KAAK,CAAC,EAAE;AAC5BA,MAAAA,KAAK,CAACE,UAAU,CAACC,OAAO,CAACC,IAAI,IAAI;AAC/B,QAAA,IAAI7B,CAAC,CAAC8B,gBAAgB,CAACD,IAAI,CAAC,IAAI7B,CAAC,CAAC+B,YAAY,CAACF,IAAI,CAACG,GAAG,CAAC,EAAE;AACxDZ,UAAAA,KAAK,CAACS,IAAI,CAACG,GAAG,CAACrD,IAAI,CAAC,GAAG;AACrBA,YAAAA,IAAI,EAAEkD,IAAI,CAACG,GAAG,CAACrD,IAAI;AACnBsD,YAAAA,QAAQ,EAAE;WACX;AACH;AACF,OAAC,CAAC;AACJ;AACA;AAAA,SACK,IAAIjC,CAAC,CAAC+B,YAAY,CAACN,KAAK,CAAC,EAAE;MAC9BL,KAAK,CAAC,cAAc,CAAC,GAAG;QACtBzC,IAAI,EAAE8C,KAAK,CAAC9C,IAAI;AAChBuD,QAAAA,QAAQ,EAAE;OACX;AACH;AACF;AAEA,EAAA,OAAOd,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAehB,aAAaA,CAACP,SAAS,EAAE1C,OAAO,EAAE;AAC/C;AACA;;AAEA;AACA,EAAA,MAAMgF,QAAQ,GAAG;IACfC,OAAO,EAAEC,YAAY,CAACxC,SAAS,CAAClB,IAAI,EAAEkB,SAAS,CAACqB,IAAI,CAAC;AACrDoB,IAAAA,YAAY,EAAEC,iBAAiB,CAAC1C,SAAS,CAACqB,IAAI,CAAC;AAC/CsB,IAAAA,kBAAkB,EAAE,QAAQ;AAC5BC,IAAAA,UAAU,EAAE;GACb;;AAED;AACA5C,EAAAA,SAAS,CAACyB,QAAQ,GAAGC,cAAc,CAAC;IAClC5C,IAAI,EAAEkB,SAAS,CAAClB,IAAI;IACpByD,OAAO,EAAED,QAAQ,CAACC,OAAO;IACzBE,YAAY,EAAEH,QAAQ,CAACG,YAAY;AACnCI,IAAAA,SAAS,EAAE;MACTF,kBAAkB,EAAEL,QAAQ,CAACK,kBAAkB;MAC/CC,UAAU,EAAEN,QAAQ,CAACM;AACvB;AACF,GAAC,CAAC;AAEF,EAAA,OAAO5C,SAAS;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASwC,YAAYA,CAAC1D,IAAI,EAAEuC,IAAI,EAAE;AAChC;AACA,EAAA,IAAI,SAAS,CAACyB,IAAI,CAAChE,IAAI,CAAC,EAAE;AACxB,IAAA,OAAO,eAAe;GACvB,MAAM,IAAI,OAAO,CAACgE,IAAI,CAAChE,IAAI,CAAC,EAAE;AAC7B,IAAA,OAAO,cAAc;GACtB,MAAM,IAAI,OAAO,CAACgE,IAAI,CAAChE,IAAI,CAAC,EAAE;AAC7B,IAAA,OAAO,gBAAgB;GACxB,MAAM,IAAI,OAAO,CAACgE,IAAI,CAAChE,IAAI,CAAC,EAAE;AAC7B,IAAA,OAAO,YAAY;GACpB,MAAM,IAAI,QAAQ,CAACgE,IAAI,CAAChE,IAAI,CAAC,EAAE;AAC9B,IAAA,OAAO,aAAa;GACrB,MAAM,IAAI,MAAM,CAACgE,IAAI,CAAChE,IAAI,CAAC,EAAE;AAC5B,IAAA,OAAO,YAAY;GACpB,MAAM,IAAI,SAAS,CAACgE,IAAI,CAAChE,IAAI,CAAC,EAAE;AAC/B,IAAA,OAAO,aAAa;GACrB,MAAM,IAAI,SAAS,CAACgE,IAAI,CAAChE,IAAI,CAAC,EAAE;AAC/B,IAAA,OAAO,aAAa;GACrB,MAAM,IAAI,QAAQ,CAACgE,IAAI,CAAChE,IAAI,CAAC,EAAE;AAC9B,IAAA,OAAO,cAAc;AACvB;AAEA,EAAA,OAAO,cAAc;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS4D,iBAAiBA,CAACrB,IAAI,EAAE;EAC/B,MAAMoB,YAAY,GAAG,EAAE;;AAEvB;AACA,EAAA,IAAIpB,IAAI,CAAClC,QAAQ,CAAC,SAAS,CAAC,EAAE;AAC5BsD,IAAAA,YAAY,CAACvE,IAAI,CAAC,OAAO,CAAC;AAC5B;AACA,EAAA,IAAImD,IAAI,CAAClC,QAAQ,CAAC,UAAU,CAAC,EAAE;AAC7BsD,IAAAA,YAAY,CAACvE,IAAI,CAAC,QAAQ,CAAC;AAC7B;AACA,EAAA,IAAImD,IAAI,CAAClC,QAAQ,CAAC,UAAU,CAAC,EAAE;AAC7BsD,IAAAA,YAAY,CAACvE,IAAI,CAAC,QAAQ,CAAC;AAC7B;AACA,EAAA,IAAImD,IAAI,CAAClC,QAAQ,CAAC,SAAS,CAAC,IAAIkC,IAAI,CAAClC,QAAQ,CAAC,aAAa,CAAC,EAAE;AAC5DsD,IAAAA,YAAY,CAACvE,IAAI,CAAC,OAAO,CAAC;AAC5B;AACA,EAAA,IAAImD,IAAI,CAAClC,QAAQ,CAAC,SAAS,CAAC,EAAE;AAC5BsD,IAAAA,YAAY,CAACvE,IAAI,CAAC,OAAO,CAAC;AAC5B;AACA,EAAA,IAAImD,IAAI,CAAClC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AAC3BsD,IAAAA,YAAY,CAACvE,IAAI,CAAC,MAAM,CAAC;AAC3B;AAEA,EAAA,OAAOuE,YAAY;AACrB;;;;"}