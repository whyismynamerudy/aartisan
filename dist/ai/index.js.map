{"version":3,"file":"index.js","sources":["../../src/ai/index.js","../../src/ai/analyze.js"],"sourcesContent":["/**\n * aartisan - AI Integration\n * \n * Provides integration with AI models for component analysis\n * and enhancement.\n */\n\n// Export the component analysis functionality\nexport { analyzeComponents, analyzeComponentWithAI } from './analyze.js';\n\n/**\n * AI providers status\n */\nexport const aiProviders = {\n  gemini: {\n    name: 'Gemini',\n    available: false,\n    capabilities: ['component-analysis', 'metadata-generation', 'accessibility-check']\n  },\n  cohere: {\n    name: 'Cohere',\n    available: false,\n    capabilities: ['component-analysis', 'metadata-generation', 'semantic-understanding']\n  }\n};\n\n/**\n * Initializes the AI providers with API keys\n * @param {Object} options - Initialization options\n * @param {string} options.geminiApiKey - Gemini API key\n * @param {string} options.cohereApiKey - Cohere API key\n * @returns {Promise<Object>} Initialized providers\n */\nexport async function initializeProviders(options = {}) {\n  // Initialize Gemini if API key is provided\n  if (options.geminiApiKey) {\n    try {\n      // This is where you would initialize the Gemini client\n      // For example: await initGeminiClient(options.geminiApiKey);\n      \n      // For demonstration, just set as available\n      aiProviders.gemini.available = true;\n      console.log('Gemini API initialized successfully');\n    } catch (error) {\n      console.error('Failed to initialize Gemini API:', error.message);\n    }\n  }\n  \n  // Initialize Cohere if API key is provided\n  if (options.cohereApiKey) {\n    try {\n      // This is where you would initialize the Cohere client\n      // For example: await initCohereClient(options.cohereApiKey);\n      \n      // For demonstration, just set as available\n      aiProviders.cohere.available = true;\n      console.log('Cohere API initialized successfully');\n    } catch (error) {\n      console.error('Failed to initialize Cohere API:', error.message);\n    }\n  }\n  \n  return { ...aiProviders };\n}\n\n/**\n * Gets the best available AI provider\n * @returns {Object|null} Best available provider or null\n */\nexport function getBestProvider() {\n  if (aiProviders.gemini.available) {\n    return {\n      id: 'gemini',\n      ...aiProviders.gemini\n    };\n  }\n  \n  if (aiProviders.cohere.available) {\n    return {\n      id: 'cohere',\n      ...aiProviders.cohere\n    };\n  }\n  \n  return null;\n}\n\n/**\n * Checks if AI integration is available\n * @returns {boolean} Whether AI integration is available\n */\nexport function isAIAvailable() {\n  return aiProviders.gemini.available || aiProviders.cohere.available;\n}\n\n/**\n * Simulates a Gemini API call for component analysis\n * This is a placeholder for an actual API implementation\n * @param {Object} component - Component information\n * @param {Object} options - Analysis options\n * @returns {Promise<Object>} Analysis result\n */\nexport async function analyzeWithGemini(component, options = {}) {\n  if (!aiProviders.gemini.available) {\n    throw new Error('Gemini API not initialized');\n  }\n  \n  // Simulate a response with a delay\n  await new Promise(resolve => setTimeout(resolve, 300));\n  \n  // Create a simulated analysis response\n  return {\n    name: component.name,\n    purpose: inferComponentPurpose(component),\n    interactions: extractInteractions(component),\n    accessibility: {\n      level: determineAccessibilityLevel(component),\n      issues: findAccessibilityIssues(component),\n      score: calculateAccessibilityScore(component)\n    },\n    complexity: {\n      level: determineComplexity(component),\n      metrics: {\n        cyclomatic: estimateCyclomaticComplexity(component),\n        cognitive: estimateCognitiveComplexity(component)\n      }\n    },\n    semantics: {\n      keywords: generateKeywords(component),\n      relationship: identifyRelationships(component),\n      importance: determineImportance(component)\n    },\n    recommendations: generateRecommendations(component)\n  };\n}\n\n/**\n * Simulates a Cohere API call for component analysis\n * This is a placeholder for an actual API implementation\n * @param {Object} component - Component information\n * @param {Object} options - Analysis options\n * @returns {Promise<Object>} Analysis result\n */\nexport async function analyzeWithCohere(component, options = {}) {\n  if (!aiProviders.cohere.available) {\n    throw new Error('Cohere API not initialized');\n  }\n  \n  // Simulate a response with a delay\n  await new Promise(resolve => setTimeout(resolve, 250));\n  \n  // Create a simulated analysis response\n  return {\n    name: component.name,\n    purpose: inferComponentPurpose(component),\n    interactions: extractInteractions(component),\n    semantic_understanding: {\n      component_type: classifyComponentType(component),\n      user_intent: predictUserIntent(component),\n      content_category: categorizeContent(component)\n    },\n    accessibility: {\n      level: determineAccessibilityLevel(component),\n      issues: findAccessibilityIssues(component)\n    },\n    enhancement_suggestions: suggestEnhancements(component),\n    context_integration: suggestContextIntegration(component)\n  };\n}\n\n// Helper functions for AI analysis\n// These are simple implementations that would be replaced with actual AI calls\n\n/**\n * Helper function to infer component purpose\n * @param {Object} component - Component information\n * @returns {string} Inferred purpose\n */\nfunction inferComponentPurpose(component) {\n  // For simplicity, use the purpose from the component if available\n  if (component.purpose) {\n    return component.purpose;\n  }\n  \n  // Otherwise use the name to infer purpose\n  const name = component.name.toLowerCase();\n  \n  if (/button|btn/i.test(name)) {\n    return 'action-button';\n  } else if (/card/i.test(name)) {\n    return 'display-card';\n  } else if (/list/i.test(name)) {\n    return 'list-container';\n  } else if (/form/i.test(name)) {\n    return 'input-form';\n  } else if (/input|field/i.test(name)) {\n    return 'input-field';\n  } else if (/nav/i.test(name)) {\n    return 'navigation';\n  } else if (/modal/i.test(name)) {\n    return 'modal-dialog';\n  }\n  \n  return 'ui-component';\n}\n\n/**\n * Extract potential interactions from component\n * @param {Object} component - Component information\n * @returns {string[]} Possible interactions\n */\nfunction extractInteractions(component) {\n  // Use component interactions if available\n  if (component.metadata && component.metadata.interactions) {\n    return component.metadata.interactions;\n  }\n  \n  // Otherwise extract from event handlers\n  const interactions = [];\n  \n  if (component.eventHandlers) {\n    component.eventHandlers.forEach(handler => {\n      if (handler.startsWith('on')) {\n        interactions.push(handler.substring(2).toLowerCase());\n      }\n    });\n  }\n  \n  return interactions;\n}\n\n/**\n * Determine accessibility level\n * @param {Object} component - Component information\n * @returns {string} Accessibility level\n */\nfunction determineAccessibilityLevel(component) {\n  // Would normally analyze component structure for accessibility features\n  return 'medium';\n}\n\n/**\n * Find potential accessibility issues\n * @param {Object} component - Component information\n * @returns {string[]} Accessibility issues\n */\nfunction findAccessibilityIssues(component) {\n  const issues = [];\n  const purpose = component.purpose || (component.metadata && component.metadata.purpose) || '';\n  \n  // Check for common issues based on component type\n  if (purpose.includes('button')) {\n    issues.push('Ensure button has accessible text');\n  } else if (purpose.includes('input')) {\n    issues.push('Ensure input has associated label');\n  } else if (purpose.includes('image')) {\n    issues.push('Ensure image has alt text');\n  }\n  \n  return issues;\n}\n\n/**\n * Calculate accessibility score\n * @param {Object} component - Component information\n * @returns {number} Accessibility score (0-100)\n */\nfunction calculateAccessibilityScore(component) {\n  // In a real implementation, this would analyze various factors\n  return 75;\n}\n\n/**\n * Determine component complexity\n * @param {Object} component - Component information\n * @returns {string} Complexity level\n */\nfunction determineComplexity(component) {\n  // Would normally analyze component structure for complexity\n  return 'medium';\n}\n\n/**\n * Estimate cyclomatic complexity\n * @param {Object} component - Component information\n * @returns {number} Estimated cyclomatic complexity\n */\nfunction estimateCyclomaticComplexity(component) {\n  // Simplified estimate\n  return 3;\n}\n\n/**\n * Estimate cognitive complexity\n * @param {Object} component - Component information\n * @returns {number} Estimated cognitive complexity\n */\nfunction estimateCognitiveComplexity(component) {\n  // Simplified estimate\n  return 5;\n}\n\n/**\n * Generate relevant keywords for the component\n * @param {Object} component - Component information\n * @returns {string[]} Keywords\n */\nfunction generateKeywords(component) {\n  // Would normally analyze component purpose and features\n  return ['ui', 'react', component.name.toLowerCase()];\n}\n\n/**\n * Identify potential relationships with other components\n * @param {Object} component - Component information\n * @returns {Object[]} Related components\n */\nfunction identifyRelationships(component) {\n  // Simplified result\n  return [];\n}\n\n/**\n * Determine the importance of the component\n * @param {Object} component - Component information\n * @returns {string} Importance level\n */\nfunction determineImportance(component) {\n  // Would normally analyze component usage and role\n  return 'medium';\n}\n\n/**\n * Generate recommendations for component enhancement\n * @param {Object} component - Component information\n * @returns {string[]} Recommendations\n */\nfunction generateRecommendations(component) {\n  const recommendations = [];\n  \n  // Add general recommendations\n  recommendations.push('Add semantic metadata');\n  recommendations.push('Enhance accessibility features');\n  \n  return recommendations;\n}\n\n/**\n * Classify the component type\n * @param {Object} component - Component information\n * @returns {string} Component type\n */\nfunction classifyComponentType(component) {\n  // Simplified classification\n  return 'ui-element';\n}\n\n/**\n * Predict user intent for the component\n * @param {Object} component - Component information\n * @returns {string} User intent\n */\nfunction predictUserIntent(component) {\n  // Would normally analyze component purpose and features\n  return 'information-display';\n}\n\n/**\n * Categorize component content\n * @param {Object} component - Component information\n * @returns {string} Content category\n */\nfunction categorizeContent(component) {\n  // Simplified category\n  return 'interactive';\n}\n\n/**\n * Suggest enhancements for the component\n * @param {Object} component - Component information\n * @returns {string[]} Enhancement suggestions\n */\nfunction suggestEnhancements(component) {\n  // Generic suggestions\n  return [\n    'Add semantic metadata',\n    'Enhance with AI context',\n    'Improve accessibility'\n  ];\n}\n\n/**\n * Suggest context integration for the component\n * @param {Object} component - Component information\n * @returns {Object} Context integration suggestions\n */\nfunction suggestContextIntegration(component) {\n  // Simplified suggestions\n  return {\n    parent: 'unknown',\n    children: [],\n    siblings: []\n  };\n}","/**\n * aartisan - AI Component Analysis\n * \n * Analyzes React components using LLMs to extract semantic information\n * and enhance them for AI agent understanding.\n */\nimport fs from 'fs-extra';\nimport path from 'path';\nimport * as parser from '@babel/parser';\nimport * as traverseModule from '@babel/traverse';\nimport * as t from '@babel/types';\nimport * as generateModule from '@babel/generator';\nconst traverse = traverseModule.default || traverseModule;\nconst generate = generateModule.default || generateModule;\nimport { createMetadata } from '../core/metadata.js';\nimport { getBestProvider, isAIAvailable } from './index.js';\n\n/**\n * Analyzes React components in a directory\n * @param {string} sourceDir - Source directory\n * @param {Object} options - Analysis options\n * @returns {Promise<Object>} Analysis results\n */\nexport async function analyzeComponents(sourceDir, options = {}) {\n  const files = await findReactFiles(sourceDir);\n  \n  const results = {\n    totalFiles: files.length,\n    analyzedComponents: 0,\n    enhancedComponents: 0,\n    components: []\n  };\n  \n  for (const file of files) {\n    const fileResults = await analyzeFile(file, options);\n    results.analyzedComponents += fileResults.analyzedComponents;\n    results.enhancedComponents += fileResults.enhancedComponents;\n    results.components.push(...fileResults.components);\n  }\n  \n  return results;\n}\n\n/**\n * Finds React files in a directory\n * @param {string} sourceDir - Source directory\n * @returns {Promise<string[]>} List of file paths\n */\nasync function findReactFiles(sourceDir) {\n  const reactExtensions = ['.jsx', '.tsx'];\n  const files = [];\n  \n  // Recursively find files\n  async function findFiles(dir) {\n    const entries = await fs.readdir(dir, { withFileTypes: true });\n    \n    for (const entry of entries) {\n      const fullPath = path.join(dir, entry.name);\n      \n      if (entry.isDirectory()) {\n        // Skip node_modules\n        if (entry.name !== 'node_modules') {\n          await findFiles(fullPath);\n        }\n      } else if (entry.isFile()) {\n        // Check extension\n        const ext = path.extname(entry.name);\n        if (reactExtensions.includes(ext)) {\n          files.push(fullPath);\n        }\n      }\n    }\n  }\n  \n  await findFiles(sourceDir);\n  return files;\n}\n\n/**\n * Analyzes a single React file\n * @param {string} filePath - File path\n * @param {Object} options - Analysis options\n * @returns {Promise<Object>} Analysis results\n */\nasync function analyzeFile(filePath, options) {\n  const fileContent = await fs.readFile(filePath, 'utf-8');\n  \n  // Parse the file\n  const ast = parser.parse(fileContent, {\n    sourceType: 'module',\n    plugins: ['jsx', 'typescript']\n  });\n  \n  const results = {\n    filePath,\n    analyzedComponents: 0,\n    enhancedComponents: 0,\n    components: []\n  };\n  \n  // Find components\n  traverse(ast, {\n    // Function components\n    FunctionDeclaration(path) {\n      if (isReactComponent(path)) {\n        const component = extractComponent(path, filePath);\n        if (component) {\n          results.analyzedComponents++;\n          results.components.push(component);\n        }\n      }\n    },\n    // Arrow function components\n    VariableDeclarator(path) {\n      if (t.isArrowFunctionExpression(path.node.init) && isReactComponent(path)) {\n        const component = extractComponent(path, filePath);\n        if (component) {\n          results.analyzedComponents++;\n          results.components.push(component);\n        }\n      }\n    },\n    // Class components\n    ClassDeclaration(path) {\n      if (isReactClassComponent(path)) {\n        const component = extractClassComponent(path, filePath);\n        if (component) {\n          results.analyzedComponents++;\n          results.components.push(component);\n        }\n      }\n    }\n  });\n  \n  // For each component, analyze and enhance\n  for (const component of results.components) {\n    await enhanceWithAI(component, options);\n    results.enhancedComponents++;\n  }\n  \n  return results;\n}\n\n/**\n * Analyzes a React component using AI\n * @param {Object} component - Component information\n * @param {Object} options - Analysis options\n * @returns {Promise<Object>} Enhanced component metadata\n */\nexport async function analyzeComponentWithAI(component, options = {}) {\n  if (!isAIAvailable()) {\n    return fallbackAnalysis(component);\n  }\n  \n  const provider = getBestProvider();\n  if (!provider) {\n    return fallbackAnalysis(component);\n  }\n  \n  try {\n    if (provider.id === 'gemini') {\n      return await analyzeWithGemini(component, options);\n    } else if (provider.id === 'cohere') {\n      return await analyzeWithCohere(component, options);\n    } else {\n      return fallbackAnalysis(component);\n    }\n  } catch (error) {\n    console.warn(`AI analysis failed: ${error.message}`);\n    return fallbackAnalysis(component);\n  }\n}\n\n/**\n * Fallback analysis when AI is not available\n * @param {Object} component - Component information\n * @returns {Object} Basic component metadata\n */\nfunction fallbackAnalysis(component) {\n  // Infer purpose from component name and structure\n  const purpose = inferPurpose(component.name, component.code || '');\n  \n  // Extract interactions from event handlers\n  const interactions = component.eventHandlers\n    ? component.eventHandlers\n        .filter(handler => handler.startsWith('on'))\n        .map(handler => handler.replace(/^on/, '').toLowerCase())\n    : inferInteractions(component.code || '');\n  \n  return createMetadata({\n    name: component.name,\n    purpose,\n    interactions,\n    semantics: {\n      aiGenerated: false,\n      accessibilityLevel: 'medium',\n      complexity: determineComplexity(component)\n    }\n  });\n}\n\n/**\n * Analyzes a component using Gemini AI\n * @param {Object} component - Component information\n * @param {Object} options - Analysis options\n * @returns {Promise<Object>} Enhanced component metadata\n */\nasync function analyzeWithGemini(component, options) {\n  // In a real implementation, this would call the Gemini API\n  // For demonstration, we'll use a more advanced fallback\n  \n  // Simulate API call delay\n  await new Promise(resolve => setTimeout(resolve, 300));\n  \n  // Generate more detailed metadata than the fallback\n  const purpose = inferPurpose(component.name, component.code || '');\n  \n  // Extract interactions from event handlers\n  const interactions = component.eventHandlers\n    ? component.eventHandlers\n        .filter(handler => handler.startsWith('on'))\n        .map(handler => handler.replace(/^on/, '').toLowerCase())\n    : inferInteractions(component.code || '');\n  \n  // Add additional semantic information\n  const semantics = {\n    aiGenerated: true,\n    aiModel: 'gemini',\n    accessibilityLevel: determineAccessibilityLevel(component),\n    complexity: determineComplexity(component),\n    suggestedImprovements: suggestImprovements(component)\n  };\n  \n  return createMetadata({\n    name: component.name,\n    purpose,\n    interactions,\n    semantics\n  });\n}\n\n/**\n * Analyzes a component using Cohere AI\n * @param {Object} component - Component information\n * @param {Object} options - Analysis options\n * @returns {Promise<Object>} Enhanced component metadata\n */\nasync function analyzeWithCohere(component, options) {\n  // Similar to Gemini implementation but would use Cohere API\n  // For demonstration, we'll use a slightly different fallback\n  \n  // Simulate API call delay\n  await new Promise(resolve => setTimeout(resolve, 250));\n  \n  const purpose = inferPurpose(component.name, component.code || '');\n  \n  // Extract interactions from event handlers\n  const interactions = component.eventHandlers\n    ? component.eventHandlers\n        .filter(handler => handler.startsWith('on'))\n        .map(handler => handler.replace(/^on/, '').toLowerCase())\n    : inferInteractions(component.code || '');\n  \n  // Add additional semantic information with a slightly different structure\n  const semantics = {\n    aiGenerated: true,\n    aiModel: 'cohere',\n    accessibilityLevel: determineAccessibilityLevel(component),\n    complexity: determineComplexity(component),\n    suggestedImprovements: suggestImprovements(component),\n    contentType: determineContentType(component)\n  };\n  \n  return createMetadata({\n    name: component.name,\n    purpose,\n    interactions,\n    semantics\n  });\n}\n\n/**\n * Checks if a node represents a React component\n * @param {Object} path - Babel path\n * @returns {boolean} Whether it's a React component\n */\nfunction isReactComponent(path) {\n  // For function declarations\n  if (t.isFunctionDeclaration(path.node)) {\n    // Check if it returns JSX\n    let returnsJSX = false;\n    path.traverse({\n      ReturnStatement(returnPath) {\n        const returnArg = returnPath.node.argument;\n        if (t.isJSXElement(returnArg) || t.isJSXFragment(returnArg)) {\n          returnsJSX = true;\n        }\n      }\n    });\n    return returnsJSX;\n  }\n  \n  // For arrow functions\n  if (t.isVariableDeclarator(path.node) && t.isArrowFunctionExpression(path.node.init)) {\n    const body = path.node.init.body;\n    if (t.isJSXElement(body) || t.isJSXFragment(body)) {\n      return true;\n    }\n    \n    // Check for JSX in block body\n    if (t.isBlockStatement(body)) {\n      let returnsJSX = false;\n      path.get('init').traverse({\n        ReturnStatement(returnPath) {\n          const returnArg = returnPath.node.argument;\n          if (t.isJSXElement(returnArg) || t.isJSXFragment(returnArg)) {\n            returnsJSX = true;\n          }\n        }\n      });\n      return returnsJSX;\n    }\n  }\n  \n  return false;\n}\n\n/**\n * Checks if a node is a React class component\n * @param {Object} path - Babel path\n * @returns {boolean} Whether it's a React class component\n */\nfunction isReactClassComponent(path) {\n  if (!t.isClassDeclaration(path.node)) {\n    return false;\n  }\n  \n  // Check if extends React.Component or Component\n  const superClass = path.node.superClass;\n  if (!superClass) {\n    return false;\n  }\n  \n  if (t.isMemberExpression(superClass)) {\n    return superClass.object.name === 'React' && superClass.property.name === 'Component';\n  }\n  \n  return superClass.name === 'Component';\n}\n\n/**\n * Extracts component information\n * @param {Object} path - Babel path\n * @param {string} filePath - File path\n * @returns {Object|null} Component information\n */\nfunction extractComponent(path, filePath) {\n  let componentName = '';\n  let componentCode = '';\n  let componentType = '';\n  let props = {};\n  \n  // Get component name and type\n  if (t.isFunctionDeclaration(path.node)) {\n    componentName = path.node.id.name;\n    componentType = 'function';\n  } else if (t.isVariableDeclarator(path.node)) {\n    componentName = path.node.id.name;\n    componentType = 'arrow';\n  }\n  \n  // Skip if component doesn't have a name\n  if (!componentName) {\n    return null;\n  }\n  \n  // Get component code\n  const { code } = generate(path.node);\n  componentCode = code;\n  \n  // Extract props\n  props = extractProps(path);\n  \n  // Extract JSX structure (simplified)\n  const jsxElements = [];\n  path.traverse({\n    JSXElement(jsxPath) {\n      const element = {\n        type: jsxPath.node.openingElement.name.name,\n        hasChildren: jsxPath.node.children.length > 0\n      };\n      jsxElements.push(element);\n    }\n  });\n  \n  // Extract event handlers\n  const eventHandlers = [];\n  path.traverse({\n    JSXAttribute(attrPath) {\n      const name = attrPath.node.name.name;\n      if (name.startsWith('on') && name.length > 2) {\n        eventHandlers.push(name);\n      }\n    }\n  });\n  \n  return {\n    name: componentName,\n    type: componentType,\n    code: componentCode,\n    filePath,\n    props,\n    jsxElements,\n    eventHandlers,\n    metadata: createMetadata({\n      name: componentName\n    })\n  };\n}\n\n/**\n * Extracts class component information\n * @param {Object} path - Babel path\n * @param {string} filePath - File path\n * @returns {Object|null} Component information\n */\nfunction extractClassComponent(path, filePath) {\n  if (!path.node.id) {\n    return null;\n  }\n  \n  const componentName = path.node.id.name;\n  \n  // Get component code\n  const { code } = generate(path.node);\n  \n  // Get component methods\n  const methods = [];\n  path.traverse({\n    ClassMethod(methodPath) {\n      if (methodPath.node.key) {\n        methods.push(methodPath.node.key.name);\n      }\n    }\n  });\n  \n  // Extract JSX structure from render method\n  const jsxElements = [];\n  path.traverse({\n    ClassMethod(methodPath) {\n      if (methodPath.node.key && methodPath.node.key.name === 'render') {\n        methodPath.traverse({\n          JSXElement(jsxPath) {\n            const element = {\n              type: jsxPath.node.openingElement.name.name,\n              hasChildren: jsxPath.node.children.length > 0\n            };\n            jsxElements.push(element);\n          }\n        });\n      }\n    }\n  });\n  \n  // Extract event handlers\n  const eventHandlers = [];\n  path.traverse({\n    JSXAttribute(attrPath) {\n      const name = attrPath.node.name.name;\n      if (name.startsWith('on') && name.length > 2) {\n        eventHandlers.push(name);\n      }\n    }\n  });\n  \n  // Analyze component name to infer purpose\n  const purpose = inferPurpose(componentName, code);\n  \n  return {\n    name: componentName,\n    type: 'class',\n    code,\n    filePath,\n    methods,\n    jsxElements,\n    eventHandlers,\n    purpose,\n    metadata: createMetadata({\n      name: componentName\n    })\n  };\n}\n\n/**\n * Extracts props from a component\n * @param {Object} path - Babel path\n * @returns {Object} Props information\n */\nfunction extractProps(path) {\n  const props = {};\n  \n  // Function declaration\n  if (t.isFunctionDeclaration(path.node) && path.node.params.length > 0) {\n    const param = path.node.params[0];\n    \n    // Destructured props\n    if (t.isObjectPattern(param)) {\n      param.properties.forEach(prop => {\n        if (t.isObjectProperty(prop) && t.isIdentifier(prop.key)) {\n          props[prop.key.name] = {\n            name: prop.key.name,\n            required: false\n          };\n        }\n      });\n    }\n    // Props as object\n    else if (t.isIdentifier(param)) {\n      props['_propsObject'] = {\n        name: param.name,\n        isObject: true\n      };\n    }\n  }\n  // Arrow function\n  else if (t.isVariableDeclarator(path.node) && \n           t.isArrowFunctionExpression(path.node.init) && \n           path.node.init.params.length > 0) {\n    const param = path.node.init.params[0];\n    \n    // Destructured props\n    if (t.isObjectPattern(param)) {\n      param.properties.forEach(prop => {\n        if (t.isObjectProperty(prop) && t.isIdentifier(prop.key)) {\n          props[prop.key.name] = {\n            name: prop.key.name,\n            required: false\n          };\n        }\n      });\n    }\n    // Props as object\n    else if (t.isIdentifier(param)) {\n      props['_propsObject'] = {\n        name: param.name,\n        isObject: true\n      };\n    }\n  }\n  \n  return props;\n}\n\n/**\n * Enhances a component with AI-generated metadata\n * @param {Object} component - Component information\n * @param {Object} options - Enhancement options\n * @returns {Promise<Object>} Enhanced component\n */\nasync function enhanceWithAI(component, options) {\n  // Check if AI is available and should be used\n  if (isAIAvailable() && options.useAI !== false) {\n    try {\n      const metadata = await analyzeComponentWithAI(component, options);\n      component.metadata = metadata;\n      return component;\n    } catch (error) {\n      console.warn(`AI analysis failed for ${component.name}: ${error.message}`);\n      // Fall back to basic enhancement\n    }\n  }\n  \n  // Basic enhancement without AI\n  const analysis = {\n    purpose: inferPurpose(component.name, component.code),\n    interactions: inferInteractions(component.code),\n    accessibilityLevel: 'medium',\n    complexity: 'low'\n  };\n  \n  // Enhance component metadata\n  component.metadata = createMetadata({\n    name: component.name,\n    purpose: analysis.purpose,\n    interactions: analysis.interactions,\n    semantics: {\n      accessibilityLevel: analysis.accessibilityLevel,\n      complexity: analysis.complexity\n    }\n  });\n  \n  return component;\n}\n\n/**\n * Infers purpose from component name and code\n * @param {string} name - Component name\n * @param {string} code - Component code\n * @returns {string} Inferred purpose\n */\nfunction inferPurpose(name, code) {\n  const nameLower = name.toLowerCase();\n  \n  // Check for common naming patterns\n  if (/button|btn/i.test(nameLower)) {\n    return inferButtonPurpose(name, code);\n  } else if (/card/i.test(nameLower)) {\n    return 'display-card';\n  } else if (/list/i.test(nameLower)) {\n    return nameLower.includes('item') ? 'list-item' : 'list-container';\n  } else if (/form/i.test(nameLower)) {\n    return 'input-form';\n  } else if (/input|field|select|checkbox|radio|textarea/i.test(nameLower)) {\n    return 'input-field';\n  } else if (/nav|menu/i.test(nameLower)) {\n    return 'navigation';\n  } else if (/header/i.test(nameLower)) {\n    return 'page-header';\n  } else if (/footer/i.test(nameLower)) {\n    return 'page-footer';\n  } else if (/modal|dialog|popup/i.test(nameLower)) {\n    return 'modal-dialog';\n  } else if (/table/i.test(nameLower)) {\n    return nameLower.includes('row') || nameLower.includes('cell') ? 'table-item' : 'data-table';\n  } else if (/chart|graph|plot/i.test(nameLower)) {\n    return 'data-visualization';\n  } else if (/container|wrapper|layout/i.test(nameLower)) {\n    return 'layout-container';\n  } else if (/sidebar/i.test(nameLower)) {\n    return 'navigation-sidebar';\n  } else if (/tab/i.test(nameLower)) {\n    return nameLower.includes('panel') ? 'tab-panel' : 'navigation-tab';\n  } else if (/alert|notification|toast/i.test(nameLower)) {\n    return 'notification';\n  } else if (/icon/i.test(nameLower)) {\n    return 'decorative-icon';\n  } else if (/image|img|photo/i.test(nameLower)) {\n    return 'display-image';\n  } else if (/video|player/i.test(nameLower)) {\n    return 'media-player';\n  }\n  \n  return 'ui-component';\n}\n\n/**\n * Infers a more specific button purpose\n * @param {string} name - Component name\n * @param {string} code - Component code\n * @returns {string} Specific button purpose\n */\nfunction inferButtonPurpose(name, code) {\n  const nameLower = name.toLowerCase();\n  \n  if (/submit/i.test(nameLower)) {\n    return 'submit-button';\n  } else if (/cancel/i.test(nameLower)) {\n    return 'cancel-button';\n  } else if (/delete|remove/i.test(nameLower)) {\n    return 'delete-button';\n  } else if (/add|create|new/i.test(nameLower)) {\n    return 'create-button';\n  } else if (/edit|update/i.test(nameLower)) {\n    return 'edit-button';\n  } else if (/save/i.test(nameLower)) {\n    return 'save-button';\n  } else if (/close/i.test(nameLower)) {\n    return 'close-button';\n  } else if (/back/i.test(nameLower)) {\n    return 'navigation-back-button';\n  } else if (/next/i.test(nameLower)) {\n    return 'navigation-next-button';\n  } else if (/toggle/i.test(nameLower)) {\n    return 'toggle-button';\n  }\n  \n  return 'action-button';\n}\n\n/**\n * Infers possible interactions from component code\n * @param {string} code - Component code\n * @returns {string[]} Inferred interactions\n */\nfunction inferInteractions(code) {\n  const interactions = [];\n  \n  // Look for common event handlers\n  if (code.includes('onClick')) {\n    interactions.push('click');\n  }\n  if (code.includes('onChange')) {\n    interactions.push('change');\n  }\n  if (code.includes('onSubmit')) {\n    interactions.push('submit');\n  }\n  if (code.includes('onHover') || code.includes('onMouseOver')) {\n    interactions.push('hover');\n  }\n  if (code.includes('onFocus')) {\n    interactions.push('focus');\n  }\n  if (code.includes('onBlur')) {\n    interactions.push('blur');\n  }\n  if (code.includes('onKeyDown') || code.includes('onKeyPress')) {\n    interactions.push('keyboard');\n  }\n  if (code.includes('onDrag')) {\n    interactions.push('drag');\n  }\n  if (code.includes('onDrop')) {\n    interactions.push('drop');\n  }\n  \n  return interactions;\n}\n\n/**\n * Determines component complexity\n * @param {Object} component - Component information\n * @returns {string} Complexity level (low, medium, high)\n */\nfunction determineComplexity(component) {\n  // Simple heuristic based on JSX elements and event handlers\n  const jsxElementCount = component.jsxElements ? component.jsxElements.length : 0;\n  const handlerCount = component.eventHandlers ? component.eventHandlers.length : 0;\n  \n  if (jsxElementCount <= 3 && handlerCount <= 1) {\n    return 'low';\n  } else if (jsxElementCount <= 10 && handlerCount <= 5) {\n    return 'medium';\n  } else {\n    return 'high';\n  }\n}\n\n/**\n * Determines component accessibility level\n * @param {Object} component - Component information\n * @returns {string} Accessibility level (low, medium, high)\n */\nfunction determineAccessibilityLevel(component) {\n  // This would ideally analyze the component's props and structure\n  // For now, return a standard level\n  return 'medium';\n}\n\n/**\n * Suggests improvements for a component\n * @param {Object} component - Component information\n * @returns {string[]} Suggested improvements\n */\nfunction suggestImprovements(component) {\n  const suggestions = [];\n  const purpose = component.purpose || (component.metadata && component.metadata.purpose) || '';\n  \n  // Add suggestions based on component type and purpose\n  if (purpose.includes('button')) {\n    suggestions.push('Ensure button has a meaningful accessible name');\n    suggestions.push('Add aria-label if button only contains an icon');\n  } else if (purpose.includes('input')) {\n    suggestions.push('Associate label with input using htmlFor attribute');\n    suggestions.push('Add appropriate aria-describedby for error messages');\n  } else if (purpose.includes('list')) {\n    suggestions.push('Use appropriate list semantics (ul/ol)');\n    suggestions.push('Add keyboard navigation for interactive lists');\n  } else if (purpose.includes('table')) {\n    suggestions.push('Add proper table headers with scope attribute');\n    suggestions.push('Add caption for table description');\n  } else if (purpose.includes('modal')) {\n    suggestions.push('Trap focus within modal when open');\n    suggestions.push('Add aria-modal=\"true\" to modal container');\n  }\n  \n  // Add general suggestions\n  suggestions.push('Add descriptive data-testid attributes for testing');\n  \n  return suggestions;\n}\n\n/**\n * Determines the content type of a component\n * @param {Object} component - Component information\n * @returns {string} Content type\n */\nfunction determineContentType(component) {\n  const purpose = component.purpose || (component.metadata && component.metadata.purpose) || '';\n  \n  if (purpose.includes('data-') || purpose.includes('table')) {\n    return 'data';\n  } else if (purpose.includes('navigation')) {\n    return 'navigation';\n  } else if (purpose.includes('form') || purpose.includes('input')) {\n    return 'input';\n  } else if (purpose.includes('button') || purpose.includes('action')) {\n    return 'action';\n  } else if (purpose.includes('display') || purpose.includes('card')) {\n    return 'display';\n  } else if (purpose.includes('layout') || purpose.includes('container')) {\n    return 'layout';\n  }\n  \n  return 'content';\n}"],"names":["aiProviders","gemini","name","available","capabilities","cohere","initializeProviders","options","geminiApiKey","console","log","error","message","cohereApiKey","getBestProvider","id","isAIAvailable","analyzeWithGemini","component","Error","Promise","resolve","setTimeout","purpose","inferComponentPurpose","interactions","extractInteractions","accessibility","level","determineAccessibilityLevel","issues","findAccessibilityIssues","score","calculateAccessibilityScore","complexity","determineComplexity","metrics","cyclomatic","estimateCyclomaticComplexity","cognitive","estimateCognitiveComplexity","semantics","keywords","generateKeywords","relationship","identifyRelationships","importance","determineImportance","recommendations","generateRecommendations","analyzeWithCohere","semantic_understanding","component_type","classifyComponentType","user_intent","predictUserIntent","content_category","categorizeContent","enhancement_suggestions","suggestEnhancements","context_integration","suggestContextIntegration","toLowerCase","test","metadata","eventHandlers","forEach","handler","startsWith","push","substring","includes","parent","children","siblings","traverse","traverseModule","default","generate","generateModule","analyzeComponents","sourceDir","files","findReactFiles","results","totalFiles","length","analyzedComponents","enhancedComponents","components","file","fileResults","analyzeFile","reactExtensions","findFiles","dir","entries","fs","readdir","withFileTypes","entry","fullPath","path","join","isDirectory","isFile","ext","extname","filePath","fileContent","readFile","ast","parser","parse","sourceType","plugins","FunctionDeclaration","isReactComponent","extractComponent","VariableDeclarator","t","isArrowFunctionExpression","node","init","ClassDeclaration","isReactClassComponent","extractClassComponent","enhanceWithAI","analyzeComponentWithAI","fallbackAnalysis","provider","warn","inferPurpose","code","filter","map","replace","inferInteractions","createMetadata","aiGenerated","accessibilityLevel","aiModel","suggestedImprovements","suggestImprovements","contentType","determineContentType","isFunctionDeclaration","returnsJSX","ReturnStatement","returnPath","returnArg","argument","isJSXElement","isJSXFragment","isVariableDeclarator","body","isBlockStatement","get","isClassDeclaration","superClass","isMemberExpression","object","property","componentName","componentCode","componentType","props","extractProps","jsxElements","JSXElement","jsxPath","element","type","openingElement","hasChildren","JSXAttribute","attrPath","methods","ClassMethod","methodPath","key","params","param","isObjectPattern","properties","prop","isObjectProperty","isIdentifier","required","isObject","useAI","analysis","nameLower","inferButtonPurpose","jsxElementCount","handlerCount","suggestions"],"mappings":"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"}