{"version":3,"file":"create.js","sources":["../../../src/cli/commands/create.js"],"sourcesContent":["import inquirer from 'inquirer';\nimport chalk from 'chalk';\nimport ora from 'ora';\nimport path from 'path';\nimport { createProject } from '../utils/project.js';\nimport { getAvailableTemplates } from '../utils/templates.js';\n\n/**\n * Registers the 'create' command with the provided Commander program\n * @param {import('commander').Command} program - The Commander program instance\n */\nexport function createCommand(program) {\n  program\n    .command('create')\n    .description('Create a new AI-optimized React application')\n    .argument('[name]', 'Name of the application')\n    .option('-t, --template <template>', 'Template to use (minimal, e-commerce)')\n    .option('-y, --yes', 'Skip confirmation prompts and use defaults')\n    .action(async (name, options) => {\n      console.log(chalk.cyan('\\nüöÄ Creating a new AI-optimized React project...\\n'));\n      \n      // Interactive mode if name is not provided or template is not specified\n      if (!name || !options.template || !options.yes) {\n        const availableTemplates = await getAvailableTemplates();\n        \n        const answers = await inquirer.prompt([\n          {\n            type: 'input',\n            name: 'name',\n            message: 'What is the name of your project?',\n            default: name || 'my-aartisan-app',\n            when: !name,\n            validate: (input) => input.trim() !== '' || 'Project name cannot be empty'\n          },\n          {\n            type: 'list',\n            name: 'template',\n            message: 'Which template would you like to use?',\n            choices: availableTemplates.map(template => ({\n              name: `${template.name} - ${template.description}`,\n              value: template.id\n            })),\n            default: 'minimal',\n            when: !options.template\n          },\n          {\n            type: 'confirm',\n            name: 'confirm',\n            message: (answers) => `Create new project ${chalk.cyan(name || answers.name)} with template ${chalk.cyan(options.template || answers.template)}?`,\n            default: true,\n            when: !options.yes\n          }\n        ]);\n        \n        // Exit if user cancels\n        if (answers.confirm === false) {\n          console.log(chalk.yellow('\\n‚ùå Project creation cancelled.\\n'));\n          process.exit(0);\n        }\n        \n        // Get the name and template from answers or original options\n        name = name || answers.name;\n        options.template = options.template || answers.template;\n      }\n      \n      // Project directory path\n      const projectDir = path.resolve(process.cwd(), name);\n      \n      // Create project with loading spinner\n      const spinner = ora('Creating project files...').start();\n      try {\n        await createProject(projectDir, options.template);\n        spinner.succeed(`Project ${chalk.green(name)} created successfully!`);\n        \n        // Display next steps\n        console.log('\\n' + chalk.cyan('Next steps:'));\n        console.log(`  cd ${name}`);\n        console.log('  npm install');\n        console.log('  npm run dev\\n');\n        console.log(chalk.cyan('Happy coding with aartisan! üéâ\\n'));\n      } catch (error) {\n        spinner.fail(`Failed to create project: ${error.message}`);\n        console.error(chalk.red(error));\n        process.exit(1);\n      }\n    });\n}"],"names":["createCommand","program","command","description","argument","option","action","name","options","console","log","chalk","cyan","template","yes","availableTemplates","getAvailableTemplates","answers","inquirer","prompt","type","message","default","when","validate","input","trim","choices","map","value","id","confirm","yellow","process","exit","projectDir","path","resolve","cwd","spinner","ora","start","createProject","succeed","green","error","fail","red"],"mappings":"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"}