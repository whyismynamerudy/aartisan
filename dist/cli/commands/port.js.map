{"version":3,"file":"port.js","sources":["../../../src/ai/index.js","../../../src/cli/commands/port.js"],"sourcesContent":["/**\n * aartisan - AI Integration\n * \n * Provides integration with AI models for component analysis\n * and enhancement.\n */\n\n// Export the component analysis functionality\nexport { analyzeComponents, analyzeComponentWithAI } from './analyze.js';\n\n/**\n * AI providers status\n */\nexport const aiProviders = {\n  gemini: {\n    name: 'Gemini',\n    available: false,\n    capabilities: ['component-analysis', 'metadata-generation', 'accessibility-check']\n  },\n  cohere: {\n    name: 'Cohere',\n    available: false,\n    capabilities: ['component-analysis', 'metadata-generation', 'semantic-understanding']\n  }\n};\n\n/**\n * Initializes the AI providers with API keys\n * @param {Object} options - Initialization options\n * @param {string} options.geminiApiKey - Gemini API key\n * @param {string} options.cohereApiKey - Cohere API key\n * @returns {Promise<Object>} Initialized providers\n */\nexport async function initializeProviders(options = {}) {\n  // Initialize Gemini if API key is provided\n  if (options.geminiApiKey) {\n    try {\n      // This is where you would initialize the Gemini client\n      // For example: await initGeminiClient(options.geminiApiKey);\n      \n      // For demonstration, just set as available\n      aiProviders.gemini.available = true;\n      console.log('Gemini API initialized successfully');\n    } catch (error) {\n      console.error('Failed to initialize Gemini API:', error.message);\n    }\n  }\n  \n  // Initialize Cohere if API key is provided\n  if (options.cohereApiKey) {\n    try {\n      // This is where you would initialize the Cohere client\n      // For example: await initCohereClient(options.cohereApiKey);\n      \n      // For demonstration, just set as available\n      aiProviders.cohere.available = true;\n      console.log('Cohere API initialized successfully');\n    } catch (error) {\n      console.error('Failed to initialize Cohere API:', error.message);\n    }\n  }\n  \n  return { ...aiProviders };\n}\n\n/**\n * Gets the best available AI provider\n * @returns {Object|null} Best available provider or null\n */\nexport function getBestProvider() {\n  if (aiProviders.gemini.available) {\n    return {\n      id: 'gemini',\n      ...aiProviders.gemini\n    };\n  }\n  \n  if (aiProviders.cohere.available) {\n    return {\n      id: 'cohere',\n      ...aiProviders.cohere\n    };\n  }\n  \n  return null;\n}\n\n/**\n * Checks if AI integration is available\n * @returns {boolean} Whether AI integration is available\n */\nexport function isAIAvailable() {\n  return aiProviders.gemini.available || aiProviders.cohere.available;\n}\n\n/**\n * Simulates a Gemini API call for component analysis\n * This is a placeholder for an actual API implementation\n * @param {Object} component - Component information\n * @param {Object} options - Analysis options\n * @returns {Promise<Object>} Analysis result\n */\nexport async function analyzeWithGemini(component, options = {}) {\n  if (!aiProviders.gemini.available) {\n    throw new Error('Gemini API not initialized');\n  }\n  \n  // Simulate a response with a delay\n  await new Promise(resolve => setTimeout(resolve, 300));\n  \n  // Create a simulated analysis response\n  return {\n    name: component.name,\n    purpose: inferComponentPurpose(component),\n    interactions: extractInteractions(component),\n    accessibility: {\n      level: determineAccessibilityLevel(component),\n      issues: findAccessibilityIssues(component),\n      score: calculateAccessibilityScore(component)\n    },\n    complexity: {\n      level: determineComplexity(component),\n      metrics: {\n        cyclomatic: estimateCyclomaticComplexity(component),\n        cognitive: estimateCognitiveComplexity(component)\n      }\n    },\n    semantics: {\n      keywords: generateKeywords(component),\n      relationship: identifyRelationships(component),\n      importance: determineImportance(component)\n    },\n    recommendations: generateRecommendations(component)\n  };\n}\n\n/**\n * Simulates a Cohere API call for component analysis\n * This is a placeholder for an actual API implementation\n * @param {Object} component - Component information\n * @param {Object} options - Analysis options\n * @returns {Promise<Object>} Analysis result\n */\nexport async function analyzeWithCohere(component, options = {}) {\n  if (!aiProviders.cohere.available) {\n    throw new Error('Cohere API not initialized');\n  }\n  \n  // Simulate a response with a delay\n  await new Promise(resolve => setTimeout(resolve, 250));\n  \n  // Create a simulated analysis response\n  return {\n    name: component.name,\n    purpose: inferComponentPurpose(component),\n    interactions: extractInteractions(component),\n    semantic_understanding: {\n      component_type: classifyComponentType(component),\n      user_intent: predictUserIntent(component),\n      content_category: categorizeContent(component)\n    },\n    accessibility: {\n      level: determineAccessibilityLevel(component),\n      issues: findAccessibilityIssues(component)\n    },\n    enhancement_suggestions: suggestEnhancements(component),\n    context_integration: suggestContextIntegration(component)\n  };\n}\n\n// Helper functions for AI analysis\n// These are simple implementations that would be replaced with actual AI calls\n\n/**\n * Helper function to infer component purpose\n * @param {Object} component - Component information\n * @returns {string} Inferred purpose\n */\nfunction inferComponentPurpose(component) {\n  // For simplicity, use the purpose from the component if available\n  if (component.purpose) {\n    return component.purpose;\n  }\n  \n  // Otherwise use the name to infer purpose\n  const name = component.name.toLowerCase();\n  \n  if (/button|btn/i.test(name)) {\n    return 'action-button';\n  } else if (/card/i.test(name)) {\n    return 'display-card';\n  } else if (/list/i.test(name)) {\n    return 'list-container';\n  } else if (/form/i.test(name)) {\n    return 'input-form';\n  } else if (/input|field/i.test(name)) {\n    return 'input-field';\n  } else if (/nav/i.test(name)) {\n    return 'navigation';\n  } else if (/modal/i.test(name)) {\n    return 'modal-dialog';\n  }\n  \n  return 'ui-component';\n}\n\n/**\n * Extract potential interactions from component\n * @param {Object} component - Component information\n * @returns {string[]} Possible interactions\n */\nfunction extractInteractions(component) {\n  // Use component interactions if available\n  if (component.metadata && component.metadata.interactions) {\n    return component.metadata.interactions;\n  }\n  \n  // Otherwise extract from event handlers\n  const interactions = [];\n  \n  if (component.eventHandlers) {\n    component.eventHandlers.forEach(handler => {\n      if (handler.startsWith('on')) {\n        interactions.push(handler.substring(2).toLowerCase());\n      }\n    });\n  }\n  \n  return interactions;\n}\n\n/**\n * Determine accessibility level\n * @param {Object} component - Component information\n * @returns {string} Accessibility level\n */\nfunction determineAccessibilityLevel(component) {\n  // Would normally analyze component structure for accessibility features\n  return 'medium';\n}\n\n/**\n * Find potential accessibility issues\n * @param {Object} component - Component information\n * @returns {string[]} Accessibility issues\n */\nfunction findAccessibilityIssues(component) {\n  const issues = [];\n  const purpose = component.purpose || (component.metadata && component.metadata.purpose) || '';\n  \n  // Check for common issues based on component type\n  if (purpose.includes('button')) {\n    issues.push('Ensure button has accessible text');\n  } else if (purpose.includes('input')) {\n    issues.push('Ensure input has associated label');\n  } else if (purpose.includes('image')) {\n    issues.push('Ensure image has alt text');\n  }\n  \n  return issues;\n}\n\n/**\n * Calculate accessibility score\n * @param {Object} component - Component information\n * @returns {number} Accessibility score (0-100)\n */\nfunction calculateAccessibilityScore(component) {\n  // In a real implementation, this would analyze various factors\n  return 75;\n}\n\n/**\n * Determine component complexity\n * @param {Object} component - Component information\n * @returns {string} Complexity level\n */\nfunction determineComplexity(component) {\n  // Would normally analyze component structure for complexity\n  return 'medium';\n}\n\n/**\n * Estimate cyclomatic complexity\n * @param {Object} component - Component information\n * @returns {number} Estimated cyclomatic complexity\n */\nfunction estimateCyclomaticComplexity(component) {\n  // Simplified estimate\n  return 3;\n}\n\n/**\n * Estimate cognitive complexity\n * @param {Object} component - Component information\n * @returns {number} Estimated cognitive complexity\n */\nfunction estimateCognitiveComplexity(component) {\n  // Simplified estimate\n  return 5;\n}\n\n/**\n * Generate relevant keywords for the component\n * @param {Object} component - Component information\n * @returns {string[]} Keywords\n */\nfunction generateKeywords(component) {\n  // Would normally analyze component purpose and features\n  return ['ui', 'react', component.name.toLowerCase()];\n}\n\n/**\n * Identify potential relationships with other components\n * @param {Object} component - Component information\n * @returns {Object[]} Related components\n */\nfunction identifyRelationships(component) {\n  // Simplified result\n  return [];\n}\n\n/**\n * Determine the importance of the component\n * @param {Object} component - Component information\n * @returns {string} Importance level\n */\nfunction determineImportance(component) {\n  // Would normally analyze component usage and role\n  return 'medium';\n}\n\n/**\n * Generate recommendations for component enhancement\n * @param {Object} component - Component information\n * @returns {string[]} Recommendations\n */\nfunction generateRecommendations(component) {\n  const recommendations = [];\n  \n  // Add general recommendations\n  recommendations.push('Add semantic metadata');\n  recommendations.push('Enhance accessibility features');\n  \n  return recommendations;\n}\n\n/**\n * Classify the component type\n * @param {Object} component - Component information\n * @returns {string} Component type\n */\nfunction classifyComponentType(component) {\n  // Simplified classification\n  return 'ui-element';\n}\n\n/**\n * Predict user intent for the component\n * @param {Object} component - Component information\n * @returns {string} User intent\n */\nfunction predictUserIntent(component) {\n  // Would normally analyze component purpose and features\n  return 'information-display';\n}\n\n/**\n * Categorize component content\n * @param {Object} component - Component information\n * @returns {string} Content category\n */\nfunction categorizeContent(component) {\n  // Simplified category\n  return 'interactive';\n}\n\n/**\n * Suggest enhancements for the component\n * @param {Object} component - Component information\n * @returns {string[]} Enhancement suggestions\n */\nfunction suggestEnhancements(component) {\n  // Generic suggestions\n  return [\n    'Add semantic metadata',\n    'Enhance with AI context',\n    'Improve accessibility'\n  ];\n}\n\n/**\n * Suggest context integration for the component\n * @param {Object} component - Component information\n * @returns {Object} Context integration suggestions\n */\nfunction suggestContextIntegration(component) {\n  // Simplified suggestions\n  return {\n    parent: 'unknown',\n    children: [],\n    siblings: []\n  };\n}","import path from 'path';\nimport fs from 'fs-extra';\nimport chalk from 'chalk';\nimport ora from 'ora';\nimport inquirer from 'inquirer';\nimport * as parser from '@babel/parser';\nimport * as traverseModule from '@babel/traverse';\nconst traverse = traverseModule.default || traverseModule;\nimport * as generateModule from '@babel/generator';\nconst generate = generateModule.default || generateModule;\nimport * as t from '@babel/types';\nimport { fileURLToPath } from 'url';\nimport { getBestProvider, isAIAvailable, initializeProviders } from '../../ai/index.js';\nimport { analyzeComponents } from '../../ai/analyze.js';\n\n// Get the __dirname equivalent in ES modules\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\n/**\n * Registers the 'port' command with the provided Commander program\n * @param {import('commander').Command} program - The Commander program instance\n */\nexport function portCommand(program) {\n  program\n    .command('port')\n    .description('Port an existing React app to use aartisan features')\n    .argument('<source>', 'Path to existing React application')\n    .option('-o, --output <path>', 'Output directory for the ported application')\n    .option('-y, --yes', 'Skip confirmation prompts and use defaults')\n    .option('-a, --ai-provider <provider>', 'AI provider to use (gemini, cohere)', 'gemini')\n    .option('-k, --api-key <key>', 'API key for the selected AI provider')\n    .option('-l, --level <level>', 'Enhancement level (basic, standard, advanced)', 'standard')\n    .option('-v, --verbose', 'Enable verbose logging')\n    .action(async (source, options) => {\n      console.log(chalk.cyan('\\n🚢 Porting existing React application...\\n'));\n      \n      try {\n        // Resolve the source path\n        const sourcePath = path.resolve(process.cwd(), source);\n        \n        // Check if the source exists\n        if (!await fs.pathExists(sourcePath)) {\n          console.error(chalk.red(`Error: Source path '${sourcePath}' does not exist`));\n          process.exit(1);\n        }\n        \n        // Determine output path\n        let outputPath = options.output;\n        if (!outputPath) {\n          if (!options.yes) {\n            const answers = await inquirer.prompt([\n              {\n                type: 'input',\n                name: 'output',\n                message: 'Where would you like to output the ported application?',\n                default: `${path.basename(sourcePath)}-aartisan`\n              }\n            ]);\n            outputPath = answers.output;\n          } else {\n            outputPath = `${path.basename(sourcePath)}-aartisan`;\n          }\n        }\n        \n        outputPath = path.resolve(process.cwd(), outputPath);\n        \n        // Confirm if the output directory exists and is not empty\n        if (await fs.pathExists(outputPath)) {\n          const files = await fs.readdir(outputPath);\n          if (files.length > 0 && !options.yes) {\n            const answers = await inquirer.prompt([\n              {\n                type: 'confirm',\n                name: 'overwrite',\n                message: `Directory '${outputPath}' already exists and is not empty. Continue?`,\n                default: false\n              }\n            ]);\n            \n            if (!answers.overwrite) {\n              console.log(chalk.yellow('\\n❌ Porting cancelled.\\n'));\n              process.exit(0);\n            }\n          }\n        }\n        \n        // Initialize AI provider if specified\n        if (options.apiKey && (options.aiProvider === 'gemini' || options.aiProvider === 'cohere')) {\n          const spinner = ora('Initializing AI provider...').start();\n          try {\n            await initializeProviders({\n              geminiApiKey: options.aiProvider === 'gemini' ? options.apiKey : undefined,\n              cohereApiKey: options.aiProvider === 'cohere' ? options.apiKey : undefined\n            });\n            spinner.succeed(`AI provider (${options.aiProvider}) initialized successfully`);\n          } catch (error) {\n            spinner.fail(`Failed to initialize AI provider: ${error.message}`);\n            console.warn(chalk.yellow('Continuing without AI enhancement...'));\n          }\n        } else if (!options.yes && !options.apiKey) {\n          // Ask if user wants to use AI for enhanced porting\n          const answers = await inquirer.prompt([\n            {\n              type: 'confirm',\n              name: 'useAI',\n              message: 'Would you like to use AI for enhanced component analysis? (requires API key)',\n              default: false\n            },\n            {\n              type: 'list',\n              name: 'aiProvider',\n              message: 'Which AI provider would you like to use?',\n              choices: ['gemini', 'cohere'],\n              default: 'gemini',\n              when: (answers) => answers.useAI\n            },\n            {\n              type: 'password',\n              name: 'apiKey',\n              message: (answers) => `Enter your ${answers.aiProvider} API key:`,\n              when: (answers) => answers.useAI,\n              validate: (input) => input.trim() !== '' || 'API key cannot be empty'\n            }\n          ]);\n          \n          if (answers.useAI) {\n            const spinner = ora('Initializing AI provider...').start();\n            try {\n              await initializeProviders({\n                geminiApiKey: answers.aiProvider === 'gemini' ? answers.apiKey : undefined,\n                cohereApiKey: answers.aiProvider === 'cohere' ? answers.apiKey : undefined\n              });\n              spinner.succeed(`AI provider (${answers.aiProvider}) initialized successfully`);\n              options.aiProvider = answers.aiProvider;\n            } catch (error) {\n              spinner.fail(`Failed to initialize AI provider: ${error.message}`);\n              console.warn(chalk.yellow('Continuing without AI enhancement...'));\n            }\n          }\n        }\n        \n        // Begin porting process\n        await portProject(sourcePath, outputPath, options);\n        \n      } catch (error) {\n        console.error(chalk.red(`\\n❌ Error during porting: ${error.message}`));\n        if (options.verbose) {\n          console.error(error);\n        }\n        process.exit(1);\n      }\n    });\n}\n\n/**\n * Main function to port a project\n * @param {string} sourcePath - Source project path\n * @param {string} outputPath - Output project path\n * @param {Object} options - Porting options\n */\nasync function portProject(sourcePath, outputPath, options) {\n  const phases = [\n    { name: 'Analyzing project structure', fn: analyzeProjectStructure },\n    { name: 'Copying project files', fn: copyProjectFiles },\n    { name: 'Transforming components', fn: transformComponents },\n    { name: 'Integrating Aartisan provider', fn: integrateAartisanProvider },\n    { name: 'Updating configuration', fn: updateConfiguration },\n    { name: 'Finalizing project', fn: finalizeProject }\n  ];\n  \n  // Project context to be passed between phases\n  const context = {\n    sourcePath,\n    outputPath,\n    options,\n    projectInfo: {},\n    componentMap: new Map(),\n    entryPoints: [],\n    routeFiles: []\n  };\n  \n  // Execute each phase\n  for (const phase of phases) {\n    const spinner = ora(phase.name).start();\n    try {\n      await phase.fn(context);\n      spinner.succeed();\n    } catch (error) {\n      spinner.fail(`${phase.name} failed: ${error.message}`);\n      throw error;\n    }\n  }\n  \n  // Display success message\n  console.log(chalk.green('\\n✅ Project ported successfully!'));\n  console.log(chalk.cyan('\\nNext steps:'));\n  console.log(`  cd ${path.relative(process.cwd(), outputPath)}`);\n  console.log('  npm install');\n  console.log('  npm run dev\\n');\n}\n\n/**\n * Phase 1: Analyze the project structure\n * @param {Object} context - Porting context\n */\nasync function analyzeProjectStructure(context) {\n  const { sourcePath, options } = context;\n  \n  // Read package.json to determine project type\n  const packageJsonPath = path.join(sourcePath, 'package.json');\n  if (await fs.pathExists(packageJsonPath)) {\n    const packageJson = await fs.readJson(packageJsonPath);\n    context.projectInfo.packageJson = packageJson;\n    \n    // Check if it's a React project\n    if (!packageJson.dependencies?.react) {\n      throw new Error('Not a React project (react not found in dependencies)');\n    }\n    \n    // Determine build system\n    if (packageJson.dependencies?.['next'] || packageJson.devDependencies?.['next']) {\n      context.projectInfo.buildSystem = 'next';\n    } else if (packageJson.dependencies?.['@remix-run/react'] || packageJson.devDependencies?.['@remix-run/react']) {\n      context.projectInfo.buildSystem = 'remix';\n    } else if (packageJson.devDependencies?.['vite']) {\n      context.projectInfo.buildSystem = 'vite';\n    } else if (packageJson.devDependencies?.['webpack']) {\n      context.projectInfo.buildSystem = 'webpack';\n    } else if (packageJson.devDependencies?.['react-scripts'] || packageJson.dependencies?.['react-scripts']) {\n      context.projectInfo.buildSystem = 'cra';\n    } else {\n      context.projectInfo.buildSystem = 'unknown';\n    }\n    \n    // Determine TypeScript usage\n    context.projectInfo.usesTypeScript = \n      packageJson.devDependencies?.['typescript'] !== undefined ||\n      await fs.pathExists(path.join(sourcePath, 'tsconfig.json'));\n    \n    // Determine routing\n    context.projectInfo.router = \n      packageJson.dependencies?.['react-router-dom'] ? 'react-router' :\n      packageJson.dependencies?.['@tanstack/react-router'] ? 'tanstack-router' :\n      packageJson.dependencies?.['next'] ? 'next-router' :\n      'unknown';\n  } else {\n    throw new Error('package.json not found in source directory');\n  }\n  \n  // Find React component files\n  const extensions = context.projectInfo.usesTypeScript \n    ? ['.tsx', '.jsx', '.js', '.ts']\n    : ['.jsx', '.js'];\n  \n  const componentFiles = [];\n  \n  async function findFiles(dir) {\n    const entries = await fs.readdir(dir, { withFileTypes: true });\n    \n    for (const entry of entries) {\n      const fullPath = path.join(dir, entry.name);\n      \n      // Skip node_modules and other common exclusions\n      if (entry.isDirectory() && !['node_modules', 'dist', '.git', 'build'].includes(entry.name)) {\n        await findFiles(fullPath);\n      } else if (entry.isFile()) {\n        const ext = path.extname(entry.name);\n        if (extensions.includes(ext)) {\n          componentFiles.push(fullPath);\n          \n          // Check if it's an entry point\n          if (entry.name === 'main.jsx' || entry.name === 'main.tsx' || \n              entry.name === 'index.jsx' || entry.name === 'index.tsx' ||\n              entry.name === 'App.jsx' || entry.name === 'App.tsx') {\n            context.entryPoints.push(fullPath);\n          }\n          \n          // Check if it's a route file\n          if (entry.name === 'routes.jsx' || entry.name === 'routes.tsx' ||\n              entry.name.includes('Route') || entry.name.includes('router')) {\n            context.routeFiles.push(fullPath);\n          }\n        }\n      }\n    }\n  }\n  \n  await findFiles(sourcePath);\n  context.componentFiles = componentFiles;\n  \n  if (options.verbose) {\n    console.log(`Found ${componentFiles.length} potential component files`);\n    console.log(`Build system: ${context.projectInfo.buildSystem}`);\n    console.log(`TypeScript: ${context.projectInfo.usesTypeScript ? 'Yes' : 'No'}`);\n    console.log(`Router: ${context.projectInfo.router}`);\n  }\n  \n  return context;\n}\n\n/**\n * Phase 2: Copy project files to the output directory\n * @param {Object} context - Porting context\n */\nasync function copyProjectFiles(context) {\n  const { sourcePath, outputPath } = context;\n  \n  // Create output directory\n  await fs.ensureDir(outputPath);\n  \n  // Copy all files except node_modules and build artifacts\n  await fs.copy(sourcePath, outputPath, {\n    filter: (src) => {\n      const relativePath = path.relative(sourcePath, src);\n      return !relativePath.startsWith('node_modules') && \n             !relativePath.startsWith('dist') &&\n             !relativePath.startsWith('build') &&\n             !relativePath.startsWith('.git');\n    }\n  });\n  \n  return context;\n}\n\n/**\n * Phase 3: Transform React components\n * @param {Object} context - Porting context\n */\nasync function transformComponents(context) {\n  const { componentFiles, sourcePath, outputPath, options } = context;\n  const enhancementLevel = options.level || 'standard';\n  const useAI = isAIAvailable();\n  \n  if (useAI && options.verbose) {\n    console.log('Using AI for component enhancement');\n  }\n  \n  // Map containing all component information\n  const componentMap = new Map();\n  \n  // First pass: identify components\n  for (const sourceFilePath of componentFiles) {\n    try {\n      // Calculate the destination path for this file\n      const relativePath = path.relative(sourcePath, sourceFilePath);\n      const destFilePath = path.join(outputPath, relativePath);\n      \n      // Only read from the source path\n      const content = await fs.readFile(sourceFilePath, 'utf-8');\n      \n      // Parse the file\n      const ast = parser.parse(content, {\n        sourceType: 'module',\n        plugins: ['jsx', 'typescript'],\n        tokens: true\n      });\n      \n      // Find components in the file\n      const components = [];\n      traverse(ast, {\n        // Function components\n        FunctionDeclaration(path) {\n          if (isReactComponent(path)) {\n            const component = extractComponent(path);\n            if (component) {\n              components.push(component);\n            }\n          }\n        },\n        // Arrow function components\n        VariableDeclarator(path) {\n          if (t.isArrowFunctionExpression(path.node.init) && isReactComponent(path)) {\n            const component = extractComponent(path);\n            if (component) {\n              components.push(component);\n            }\n          }\n        },\n        // Class components\n        ClassDeclaration(path) {\n          if (isReactClassComponent(path)) {\n            const component = extractClassComponent(path);\n            if (component) {\n              components.push(component);\n            }\n          }\n        }\n      });\n      \n      if (components.length > 0) {\n        // Store in map with destination path as key, but include source content\n        componentMap.set(destFilePath, { components, content, sourceFilePath });\n      }\n    } catch (error) {\n      const relativePath = path.relative(sourcePath, sourceFilePath);\n      if (options.verbose) {\n        console.warn(`Warning: Could not parse ${relativePath}: ${error.message}`);\n      }\n    }\n  }\n  \n  context.componentMap = componentMap;\n  \n  // Second pass: enhance components\n  const enhancedFiles = [];\n  \n  for (const [destFilePath, fileInfo] of componentMap.entries()) {\n    try {\n      let newContent = fileInfo.content;\n      let contentModified = false;\n      \n      // Choose enhancement strategy based on component\n      for (const component of fileInfo.components) {\n        if (useAI) {\n          // Use AI for enhanced analysis\n          const provider = getBestProvider();\n          if (provider) {\n            try {\n              // AI enhancement logic\n              const aiEnhancement = await simulateAIAnalysis(component, provider.id);\n              component.aiSuggestions = aiEnhancement;\n            } catch (error) {\n              if (options.verbose) {\n                console.warn(`Warning: AI enhancement failed for ${component.name}: ${error.message}`);\n              }\n            }\n          }\n        }\n        \n        // Apply enhancements based on component type and level\n        let enhancedContent;\n        if (component.type === 'function' || component.type === 'arrow') {\n          enhancedContent = enhanceFunctionComponent(newContent, component, enhancementLevel);\n        } else if (component.type === 'class') {\n          enhancedContent = enhanceClassComponent(newContent, component, enhancementLevel);\n        }\n        \n        // Check if content was actually changed\n        if (enhancedContent && enhancedContent !== newContent) {\n          newContent = enhancedContent;\n          contentModified = true;\n          \n          if (options.verbose) {\n            console.log(`Enhanced component: ${component.name}`);\n          }\n        } else if (options.verbose) {\n          console.log(`No changes applied to component: ${component.name}`);\n        }\n      }\n      \n      // Add necessary imports if content was modified\n      if (contentModified) {\n        try {\n          const withImports = addAartisanImports(newContent, fileInfo.components, enhancementLevel);\n          if (withImports !== newContent) {\n            newContent = withImports;\n            \n            if (options.verbose) {\n              console.log(`Added Aartisan imports to file: ${path.relative(outputPath, destFilePath)}`);\n            }\n          }\n        } catch (error) {\n          console.warn(`Warning: Failed to add imports: ${error.message}`);\n        }\n        \n        // Ensure the destination directory exists\n        await fs.ensureDir(path.dirname(destFilePath));\n        \n        // Write to the destination file path\n        await fs.writeFile(destFilePath, newContent, 'utf-8');\n        enhancedFiles.push(path.relative(outputPath, destFilePath));\n      }\n    } catch (error) {\n      const relativePath = path.relative(outputPath, destFilePath);\n      if (options.verbose) {\n        console.warn(`Warning: Could not enhance ${relativePath}: ${error.message}`);\n      }\n    }\n  }\n  \n  console.log(`Enhanced ${enhancedFiles.length} component files`);\n  \n  return context;\n}\n\n/**\n * Phase 4: Integrate Aartisan provider in the app root\n * @param {Object} context - Porting context\n */\nasync function integrateAartisanProvider(context) {\n  const { entryPoints, outputPath, options } = context;\n  \n  if (entryPoints.length === 0) {\n    console.warn(chalk.yellow('Warning: No entry points found, skipping Aartisan provider integration'));\n    return context;\n  }\n  \n  // Find the main entry file first (most likely to contain the rendering logic)\n  const mainEntryFiles = entryPoints.filter(file => {\n    const filename = path.basename(file).toLowerCase();\n    return filename === 'main.jsx' || filename === 'main.tsx' || \n           filename === 'index.jsx' || filename === 'index.tsx';\n  });\n  \n  // If no main files found, try all entry points\n  const filesToCheck = mainEntryFiles.length > 0 ? mainEntryFiles : entryPoints;\n  let integrationSuccessful = false;\n  \n  // Attempt to integrate with entry files\n  for (const entryFile of filesToCheck) {\n    const relativePath = path.relative(outputPath, entryFile);\n    const outputFilePath = path.join(outputPath, relativePath);\n    \n    try {\n      const content = await fs.readFile(outputFilePath, 'utf-8');\n      \n      // Parse the file\n      const ast = parser.parse(content, {\n        sourceType: 'module',\n        plugins: ['jsx', 'typescript']\n      });\n      \n      let modified = false;\n      \n      // Add import for AartisanProvider if not already present\n      traverse(ast, {\n        Program(path) {\n          // Check if AartisanProvider is already imported\n          const hasAartisanImport = path.node.body.some(node => \n            t.isImportDeclaration(node) && \n            node.source.value.includes('aartisan') &&\n            node.specifiers.some(spec => \n              (t.isImportSpecifier(spec) || t.isImportDefaultSpecifier(spec)) && \n              spec.local.name === 'AartisanProvider'\n            )\n          );\n          \n          if (!hasAartisanImport) {\n            const importDeclaration = t.importDeclaration(\n              [t.importSpecifier(\n                t.identifier('AartisanProvider'),\n                t.identifier('AartisanProvider')\n              )],\n              t.stringLiteral('aartisan/react')\n            );\n            \n            path.node.body.unshift(importDeclaration);\n            modified = true;\n          }\n        }\n      });\n      \n      // Identify common render patterns and wrap App component\n      let rootElementFound = false;\n      \n      // 1. Look for ReactDOM.createRoot().render(<App />) pattern (React 18)\n      traverse(ast, {\n        CallExpression(path) {\n          if (rootElementFound) return;\n          \n          // Find the render() call in createRoot().render()\n          if (t.isMemberExpression(path.node.callee) && \n              path.node.callee.property && \n              path.node.callee.property.name === 'render') {\n            \n            // Check if it's part of createRoot chain\n            const calleeObject = path.node.callee.object;\n            if (t.isCallExpression(calleeObject) && \n                (t.isIdentifier(calleeObject.callee) && calleeObject.callee.name === 'createRoot' ||\n                 t.isMemberExpression(calleeObject.callee) && calleeObject.callee.property.name === 'createRoot')) {\n              \n              // Found createRoot().render(), now check its argument\n              if (path.node.arguments.length > 0) {\n                const renderArg = path.node.arguments[0];\n                \n                // Only wrap if it's not already wrapped with AartisanProvider\n                if (!isWrappedWithAartisanProvider(renderArg)) {\n                  path.node.arguments[0] = wrapWithAartisanProvider(renderArg, context);\n                  modified = true;\n                  rootElementFound = true;\n                }\n              }\n            }\n          }\n        }\n      });\n      \n      // 2. Look for ReactDOM.render(<App />, document.getElementById('root')) pattern (React 17 and earlier)\n      if (!rootElementFound) {\n        traverse(ast, {\n          CallExpression(path) {\n            if (rootElementFound) return;\n            \n            if (t.isMemberExpression(path.node.callee) && \n                path.node.callee.object && \n                path.node.callee.object.name === 'ReactDOM' && \n                path.node.callee.property && \n                path.node.callee.property.name === 'render' && \n                path.node.arguments.length >= 2) {\n              \n              const renderArg = path.node.arguments[0];\n              \n              // Only wrap if it's not already wrapped with AartisanProvider\n              if (!isWrappedWithAartisanProvider(renderArg)) {\n                path.node.arguments[0] = wrapWithAartisanProvider(renderArg, context);\n                modified = true;\n                rootElementFound = true;\n              }\n            }\n          }\n        });\n      }\n      \n      // 3. Look for direct render(<App />) pattern (some frameworks)\n      if (!rootElementFound) {\n        traverse(ast, {\n          CallExpression(path) {\n            if (rootElementFound) return;\n            \n            if (t.isIdentifier(path.node.callee) && \n                path.node.callee.name === 'render' && \n                path.node.arguments.length >= 1) {\n              \n              const renderArg = path.node.arguments[0];\n              \n              // Only wrap if it's not already wrapped with AartisanProvider\n              if (!isWrappedWithAartisanProvider(renderArg)) {\n                path.node.arguments[0] = wrapWithAartisanProvider(renderArg, context);\n                modified = true;\n                rootElementFound = true;\n              }\n            }\n          }\n        });\n      }\n      \n      // 4. Look for special patterns like hydrateRoot in Next.js or other frameworks\n      if (!rootElementFound) {\n        traverse(ast, {\n          CallExpression(path) {\n            if (rootElementFound) return;\n            \n            // Check for hydrateRoot, hydrate, or other framework-specific render functions\n            if ((t.isIdentifier(path.node.callee) && \n                 ['hydrateRoot', 'hydrate', 'renderToDOM'].includes(path.node.callee.name)) || \n                (t.isMemberExpression(path.node.callee) && \n                 path.node.callee.property && \n                 ['hydrateRoot', 'hydrate'].includes(path.node.callee.property.name))) {\n              \n              if (path.node.arguments.length >= 2) {\n                // For hydrateRoot(container, <App />, ...) the JSX is the second argument\n                const renderArg = path.node.arguments[1];\n                \n                if (t.isJSXElement(renderArg) && !isWrappedWithAartisanProvider(renderArg)) {\n                  path.node.arguments[1] = wrapWithAartisanProvider(renderArg, context);\n                  modified = true;\n                  rootElementFound = true;\n                }\n              } else if (path.node.arguments.length >= 1) {\n                // For some frameworks it might be the first argument\n                const renderArg = path.node.arguments[0];\n                \n                if (t.isJSXElement(renderArg) && !isWrappedWithAartisanProvider(renderArg)) {\n                  path.node.arguments[0] = wrapWithAartisanProvider(renderArg, context);\n                  modified = true;\n                  rootElementFound = true;\n                }\n              }\n            }\n          }\n        });\n      }\n      \n      if (modified) {\n        // Generate the modified code\n        const output = generate(ast, {}, content);\n        await fs.writeFile(outputFilePath, output.code);\n        \n        console.log(`Integrated AartisanProvider in ${relativePath}`);\n        integrationSuccessful = true;\n        \n        if (rootElementFound) {\n          // If we successfully integrated with the root, we can stop processing\n          break;\n        }\n      } else if (options.verbose) {\n        console.log(`No integration point found in ${relativePath}`);\n      }\n    } catch (error) {\n      console.error(`Error processing ${path.relative(outputPath, entryFile)}: ${error.message}`);\n      if (options.verbose) {\n        console.error(error.stack);\n      }\n    }\n  }\n  \n  // If no integration was successful, try to create a wrapper in a new file\n  if (!integrationSuccessful && options.createWrapper !== false) {\n    try {\n      await createWrapperFile(context);\n      integrationSuccessful = true;\n    } catch (error) {\n      console.error(`Error creating wrapper file: ${error.message}`);\n      if (options.verbose) {\n        console.error(error.stack);\n      }\n    }\n  }\n  \n  if (!integrationSuccessful) {\n    console.warn(chalk.yellow(`\nWarning: Could not automatically integrate AartisanProvider.\nYou will need to manually add it to your application root.\n\nExample:\nimport { AartisanProvider } from 'aartisan/react';\n\n// Wrap your app root component\n<AartisanProvider config={{ appName: 'Your App Name' }}>\n  <App />\n</AartisanProvider>\n    `));\n  }\n  \n  return context;\n}\n\n/**\n * Helper function to check if an element is already wrapped with AartisanProvider\n * @param {Object} node - Node to check\n * @returns {boolean} Whether it's wrapped with AartisanProvider\n */\nfunction isWrappedWithAartisanProvider(node) {\n  if (!node) return false;\n  \n  // Check if node is a JSX element with AartisanProvider\n  if (t.isJSXElement(node) && \n      node.openingElement && \n      node.openingElement.name && \n      node.openingElement.name.name === 'AartisanProvider') {\n    return true;\n  }\n  \n  // Check JSX expressions like {<AartisanProvider>...</AartisanProvider>}\n  if (t.isJSXExpressionContainer(node) && t.isJSXElement(node.expression)) {\n    return isWrappedWithAartisanProvider(node.expression);\n  }\n  \n  return false;\n}\n\n/**\n * Helper function to wrap a node with AartisanProvider\n * @param {Object} node - Node to wrap\n * @param {Object} context - Porting context\n * @returns {Object} Wrapped node\n */\nfunction wrapWithAartisanProvider(node, context) {\n  // Create config object\n  const configExpression = t.objectExpression([\n    t.objectProperty(\n      t.identifier('appName'),\n      t.stringLiteral(context.projectInfo.packageJson.name || 'Aartisan App')\n    ),\n    t.objectProperty(\n      t.identifier('appPurpose'),\n      t.stringLiteral('web-application')\n    )\n  ]);\n  \n  // For JSX elements, wrap directly\n  if (t.isJSXElement(node)) {\n    return t.jsxElement(\n      t.jsxOpeningElement(\n        t.jsxIdentifier('AartisanProvider'),\n        [\n          t.jsxAttribute(\n            t.jsxIdentifier('config'),\n            t.jsxExpressionContainer(configExpression)\n          )\n        ],\n        false\n      ),\n      t.jsxClosingElement(t.jsxIdentifier('AartisanProvider')),\n      [node],\n      false\n    );\n  }\n  \n  // For JSX expressions, extract the inner element and wrap it\n  if (t.isJSXExpressionContainer(node) && t.isJSXElement(node.expression)) {\n    return t.jsxExpressionContainer(wrapWithAartisanProvider(node.expression, context));\n  }\n  \n  // For identifiers (like <App />), create a new JSX element\n  if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    const nodeName = node.name;\n    \n    return t.jsxElement(\n      t.jsxOpeningElement(\n        t.jsxIdentifier('AartisanProvider'),\n        [\n          t.jsxAttribute(\n            t.jsxIdentifier('config'),\n            t.jsxExpressionContainer(configExpression)\n          )\n        ],\n        false\n      ),\n      t.jsxClosingElement(t.jsxIdentifier('AartisanProvider')),\n      [\n        t.jsxElement(\n          t.jsxOpeningElement(t.jsxIdentifier(nodeName), [], true),\n          null,\n          [],\n          true\n        )\n      ],\n      false\n    );\n  }\n  \n  // For other types, return as is (this would be unusual)\n  return node;\n}\n\n/**\n * Create a wrapper file that imports the original App and wraps it with AartisanProvider\n * @param {Object} context - Porting context\n */\nasync function createWrapperFile(context) {\n  const { outputPath, projectInfo } = context;\n  \n  // Determine source file path patterns based on project structure\n  let appFilePath = path.join(outputPath, 'src', 'App.tsx');\n  if (!await fs.pathExists(appFilePath)) {\n    appFilePath = path.join(outputPath, 'src', 'App.jsx');\n  }\n  if (!await fs.pathExists(appFilePath)) {\n    appFilePath = path.join(outputPath, 'src', 'app.tsx');\n  }\n  if (!await fs.pathExists(appFilePath)) {\n    appFilePath = path.join(outputPath, 'src', 'app.jsx');\n  }\n  \n  // If we can't find the App file, we can't create a wrapper\n  if (!await fs.pathExists(appFilePath)) {\n    throw new Error(\"Could not locate App component file\");\n  }\n  \n  // Determine the extension to use\n  const ext = path.extname(appFilePath);\n  \n  // Create a new wrapper file\n  const wrapperFilePath = path.join(outputPath, 'src', `AartisanApp${ext}`);\n  \n  // Create wrapper content\n  const appFileName = path.basename(appFilePath, ext);\n  const wrapperContent = `import { AartisanProvider } from 'aartisan/react';\nimport ${appFileName} from './${appFileName}';\n\n/**\n * AartisanApp\n * \n * This component wraps the main App component with the AartisanProvider\n * to provide AI-optimization features throughout the application.\n */\nexport default function AartisanApp() {\n  return (\n    <AartisanProvider \n      config={{\n        appName: '${projectInfo.packageJson.name || 'Aartisan App'}',\n        appPurpose: 'web-application',\n        accessibilityLevel: 'AA'\n      }}\n    >\n      <${appFileName} />\n    </AartisanProvider>\n  );\n}\n`;\n\n  // Write the wrapper file\n  await fs.writeFile(wrapperFilePath, wrapperContent);\n  console.log(`Created AartisanProvider wrapper file at ${path.relative(outputPath, wrapperFilePath)}`);\n  \n  // Now update the main entry point to use this wrapper\n  const entryFiles = [\n    path.join(outputPath, 'src', 'main.tsx'),\n    path.join(outputPath, 'src', 'main.jsx'),\n    path.join(outputPath, 'src', 'index.tsx'),\n    path.join(outputPath, 'src', 'index.jsx')\n  ];\n  \n  let entryFileUpdated = false;\n  \n  for (const entryFile of entryFiles) {\n    if (await fs.pathExists(entryFile)) {\n      try {\n        let content = await fs.readFile(entryFile, 'utf-8');\n        \n        // Replace imports of App with AartisanApp\n        content = content.replace(\n          /import\\s+App\\s+from\\s+['\"]\\.\\/App['\"];?/g, \n          `import App from './AartisanApp';`\n        );\n        content = content.replace(\n          /import\\s+App\\s+from\\s+['\"]\\.\\/app['\"];?/g, \n          `import App from './AartisanApp';`\n        );\n        content = content.replace(\n          /import\\s+{\\s*App\\s*}\\s+from\\s+['\"]\\.\\/App['\"];?/g, \n          `import { App } from './AartisanApp';`\n        );\n        \n        // Write the updated content\n        await fs.writeFile(entryFile, content);\n        console.log(`Updated imports in ${path.relative(outputPath, entryFile)}`);\n        entryFileUpdated = true;\n        \n        // Only update one entry file\n        break;\n      } catch (error) {\n        console.warn(`Warning: Could not update ${path.relative(outputPath, entryFile)}: ${error.message}`);\n      }\n    }\n  }\n  \n  if (!entryFileUpdated) {\n    console.warn(chalk.yellow(`\nWarning: Created AartisanApp wrapper but could not update entry files.\nYou will need to manually update your entry file to import from './AartisanApp' instead of './App'.\n`));\n  }\n}\n\n/**\n * Helper function to create an AartisanProvider element\n * @param {Object} childElement - Child JSX element\n * @param {Object} context - Port context\n * @returns {Object} JSX element wrapped with AartisanProvider\n */\nfunction createAartisanProvider(childElement, context) {\n  const configExpression = t.objectExpression([\n    t.objectProperty(\n      t.identifier('appName'),\n      t.stringLiteral(context.projectInfo.packageJson.name || 'Aartisan App')\n    ),\n    t.objectProperty(\n      t.identifier('appPurpose'),\n      t.stringLiteral('web-application')\n    )\n  ]);\n  \n  return t.jsxElement(\n    t.jsxOpeningElement(\n      t.jsxIdentifier('AartisanProvider'),\n      [\n        t.jsxAttribute(\n          t.jsxIdentifier('config'),\n          t.jsxExpressionContainer(configExpression)\n        )\n      ],\n      false\n    ),\n    t.jsxClosingElement(t.jsxIdentifier('AartisanProvider')),\n    [childElement],\n    false\n  );\n}\n\n/**\n * Check if a node is a ReactDOM.render call\n * @param {Object} node - Node to check\n * @returns {boolean} Whether it's a ReactDOM.render call\n */\nfunction isReactDOMRender(node) {\n  if (!t.isCallExpression(node) || !node.callee) {\n    return false;\n  }\n  \n  if (t.isMemberExpression(node.callee) && \n      node.callee.object && \n      node.callee.object.name === 'ReactDOM' && \n      node.callee.property && \n      node.callee.property.name === 'render') {\n    return true;\n  }\n  \n  return false;\n}\n\n/**\n * Helper function to check if a JSX element is inside a render call or return statement\n * @param {Object} path - Babel path\n * @returns {boolean} Whether the element is in a render or return\n */\nfunction isInRenderCallOrReturn(path) {\n  let currentPath = path;\n  const MAX_DEPTH = 5; // Prevent excessive traversal\n  let depth = 0;\n  \n  while (currentPath && depth < MAX_DEPTH) {\n    if (t.isReturnStatement(currentPath.parent)) {\n      return true;\n    }\n    \n    if (t.isCallExpression(currentPath.parent) && \n        t.isMemberExpression(currentPath.parent.callee) &&\n        currentPath.parent.callee.property.name === 'render') {\n      return true;\n    }\n    \n    currentPath = currentPath.parentPath;\n    depth++;\n  }\n  \n  return false;\n}\n\n/**\n * Phase 5: Update configuration files\n * @param {Object} context - Porting context\n */\nasync function updateConfiguration(context) {\n  const { outputPath, projectInfo, options } = context;\n  \n  // Update package.json to add aartisan dependency\n  const packageJsonPath = path.join(outputPath, 'package.json');\n  if (await fs.pathExists(packageJsonPath)) {\n    const packageJson = await fs.readJson(packageJsonPath);\n    \n    // Add aartisan to dependencies\n    if (!packageJson.dependencies) {\n      packageJson.dependencies = {};\n    }\n    packageJson.dependencies.aartisan = '^0.1.0';\n    \n    // Write updated package.json\n    await fs.writeJson(packageJsonPath, packageJson, { spaces: 2 });\n  }\n  \n  // Configure build system\n  if (projectInfo.buildSystem === 'vite') {\n    await configureVite(outputPath, options);\n  } else if (projectInfo.buildSystem === 'webpack') {\n    await configureWebpack(outputPath, options);\n  } else if (projectInfo.buildSystem === 'cra') {\n    await configureCRA(outputPath, options);\n  }\n  \n  return context;\n}\n\n/**\n * Phase 6: Finalize project\n * @param {Object} context - Porting context\n */\nasync function finalizeProject(context) {\n  const { outputPath } = context;\n  \n  // Create a README.md file if it doesn't exist\n  const readmePath = path.join(outputPath, 'README.md');\n  if (!await fs.pathExists(readmePath)) {\n    const readmeContent = generateReadme(context);\n    await fs.writeFile(readmePath, readmeContent);\n  } else {\n    // Append Aartisan information to existing README\n    const existingReadme = await fs.readFile(readmePath, 'utf-8');\n    const aartisanInfo = generateAartisanReadmeSection();\n    await fs.writeFile(readmePath, `${existingReadme}\\n\\n${aartisanInfo}`);\n  }\n  \n  return context;\n}\n\n/**\n * Helper: Configure Vite project\n * @param {string} outputPath - Project output path\n * @param {Object} options - Configuration options\n */\nasync function configureVite(outputPath, options) {\n  const viteConfigPaths = [\n    path.join(outputPath, 'vite.config.js'),\n    path.join(outputPath, 'vite.config.ts')\n  ];\n  \n  let viteConfigPath;\n  for (const configPath of viteConfigPaths) {\n    if (await fs.pathExists(configPath)) {\n      viteConfigPath = configPath;\n      break;\n    }\n  }\n  \n  if (!viteConfigPath) {\n    if (options.verbose) {\n      console.warn('No Vite config file found, skipping Vite configuration');\n    }\n    return;\n  }\n  \n  try {\n    const content = await fs.readFile(viteConfigPath, 'utf-8');\n    \n    // Parse the file\n    const ast = parser.parse(content, {\n      sourceType: 'module',\n      plugins: ['jsx', 'typescript']\n    });\n    \n    let modified = false;\n    \n    // Add import for aartisan-vite-plugin\n    traverse(ast, {\n      Program(path) {\n        // Check if aartisan is already imported\n        const hasAartisanImport = path.node.body.some(node => \n          t.isImportDeclaration(node) && \n          node.source.value.includes('aartisan')\n        );\n        \n        if (!hasAartisanImport) {\n          const importDeclaration = t.importDeclaration(\n            [t.importDefaultSpecifier(t.identifier('aartisan'))],\n            t.stringLiteral('aartisan/vite-plugin')\n          );\n          \n          path.node.body.unshift(importDeclaration);\n          modified = true;\n        }\n      },\n      CallExpression(path) {\n        // Find the defineConfig call\n        if (path.node.callee.name === 'defineConfig') {\n          const configArg = path.node.arguments[0];\n          if (t.isObjectExpression(configArg)) {\n            // Find the plugins array\n            const pluginsProperty = configArg.properties.find(prop => \n              t.isObjectProperty(prop) && \n              prop.key.name === 'plugins'\n            );\n            \n            if (pluginsProperty && t.isArrayExpression(pluginsProperty.value)) {\n              // Check if aartisan plugin is already added\n              const hasAartisanPlugin = pluginsProperty.value.elements.some(element => \n                t.isCallExpression(element) && \n                element.callee.name === 'aartisan'\n              );\n              \n              if (!hasAartisanPlugin) {\n                // Create aartisan plugin call\n                const aartisanOptions = t.objectExpression([\n                  t.objectProperty(\n                    t.identifier('optimizationLevel'),\n                    t.stringLiteral(options.level || 'standard')\n                  ),\n                  t.objectProperty(\n                    t.identifier('accessibilityFeatures'),\n                    t.booleanLiteral(true)\n                  )\n                ]);\n                \n                const aartisanCall = t.callExpression(\n                  t.identifier('aartisan'),\n                  [aartisanOptions]\n                );\n                \n                // Add to plugins array\n                pluginsProperty.value.elements.push(aartisanCall);\n                modified = true;\n              }\n            }\n          }\n        }\n      }\n    });\n    \n    if (modified) {\n      // Generate the modified code\n      const output = generate(ast, {}, content);\n      await fs.writeFile(viteConfigPath, output.code);\n      \n      if (options.verbose) {\n        console.log(`Updated Vite configuration at ${viteConfigPath}`);\n      }\n    }\n  } catch (error) {\n    if (options.verbose) {\n      console.warn(`Warning: Could not update Vite configuration: ${error.message}`);\n    }\n  }\n}\n\n/**\n * Helper: Configure Webpack project\n * @param {string} outputPath - Project output path\n * @param {Object} options - Configuration options\n */\nasync function configureWebpack(outputPath, options) {\n  // Implementation for webpack configuration\n  // This is a placeholder for now\n  if (options.verbose) {\n    console.log('Webpack configuration is not yet implemented');\n  }\n}\n\n/**\n * Helper: Configure Create React App project\n * @param {string} outputPath - Project output path\n * @param {Object} options - Configuration options\n */\nasync function configureCRA(outputPath, options) {\n  // Implementation for CRA configuration\n  // This is a placeholder for now\n  if (options.verbose) {\n    console.log('Create React App configuration is not yet implemented');\n  }\n}\n\n/**\n * Helper: Check if a node is a React component\n * @param {Object} path - Babel path\n * @returns {boolean} Whether it's a React component\n */\nfunction isReactComponent(path) {\n  // For function declarations\n  if (t.isFunctionDeclaration(path.node)) {\n    // Check if it returns JSX\n    let returnsJSX = false;\n    path.traverse({\n      ReturnStatement(returnPath) {\n        const returnArg = returnPath.node.argument;\n        if (t.isJSXElement(returnArg) || t.isJSXFragment(returnArg)) {\n          returnsJSX = true;\n        }\n      }\n    });\n    return returnsJSX;\n  }\n  \n  // For arrow functions\n  if (t.isVariableDeclarator(path.node) && t.isArrowFunctionExpression(path.node.init)) {\n    const body = path.node.init.body;\n    if (t.isJSXElement(body) || t.isJSXFragment(body)) {\n      return true;\n    }\n    \n    // Check for JSX in block body\n    if (t.isBlockStatement(body)) {\n      let returnsJSX = false;\n      path.get('init').traverse({\n        ReturnStatement(returnPath) {\n          const returnArg = returnPath.node.argument;\n          if (t.isJSXElement(returnArg) || t.isJSXFragment(returnArg)) {\n            returnsJSX = true;\n          }\n        }\n      });\n      return returnsJSX;\n    }\n  }\n  \n  return false;\n}\n\n/**\n * Helper: Check if a node is a React class component\n * @param {Object} path - Babel path\n * @returns {boolean} Whether it's a React class component\n */\nfunction isReactClassComponent(path) {\n  if (!t.isClassDeclaration(path.node)) {\n    return false;\n  }\n  \n  // Check if extends React.Component or Component\n  const superClass = path.node.superClass;\n  if (!superClass) {\n    return false;\n  }\n  \n  if (t.isMemberExpression(superClass)) {\n    return superClass.object.name === 'React' && superClass.property.name === 'Component';\n  }\n  \n  return superClass.name === 'Component';\n}\n\n/**\n * Check if an element is likely the app root element\n * @param {Object} path - Element path\n * @returns {boolean} Whether it's likely the app root\n */\nfunction isAppRootElement(path) {\n  // Check common root wrapper elements\n  if (path.node && path.node.openingElement && path.node.openingElement.name) {\n    const elementName = path.node.openingElement.name.name;\n    const rootWrappers = ['Router', 'BrowserRouter', 'HashRouter', 'StrictMode', 'Provider', 'QueryClientProvider'];\n    \n    if (rootWrappers.includes(elementName)) {\n      return true;\n    }\n  }\n  \n  // Check if it's in a component like App, Root, etc.\n  let parentFunction = path.getFunctionParent();\n  if (parentFunction && parentFunction.node) {\n    // For function declarations\n    if (t.isFunctionDeclaration(parentFunction.node) && \n        parentFunction.node.id && \n        ['App', 'Root', 'Main'].includes(parentFunction.node.id.name)) {\n      return true;\n    }\n    \n    // For arrow functions in variable declarations\n    if (t.isVariableDeclarator(parentFunction.node) && \n        parentFunction.node.id && \n        ['App', 'Root', 'Main'].includes(parentFunction.node.id.name)) {\n      return true;\n    }\n  }\n  \n  return false;\n}\n\n/**\n * Check if a JSX element already has an AartisanProvider\n * @param {Object} element - JSX element to check\n * @returns {boolean} True if the element already has an AartisanProvider\n */\nfunction hasAartisanProvider(element) {\n  // Check if this element is an AartisanProvider\n  if (element.openingElement && element.openingElement.name && \n      element.openingElement.name.name === 'AartisanProvider') {\n    return true;\n  }\n  \n  // Check if any of the children are AartisanProvider elements\n  if (element.children) {\n    for (const child of element.children) {\n      if (t.isJSXElement(child) && \n          child.openingElement && \n          child.openingElement.name &&\n          child.openingElement.name.name === 'AartisanProvider') {\n        return true;\n      }\n    }\n  }\n  \n  return false;\n}\n\n/**\n * Helper: Extract component information\n * @param {Object} path - Babel path\n * @returns {Object|null} Component information\n */\nfunction extractComponent(path) {\n  let componentName = '';\n  let componentType = '';\n  let props = [];\n  \n  // Get component name and type\n  if (t.isFunctionDeclaration(path.node)) {\n    componentName = path.node.id.name;\n    componentType = 'function';\n  } else if (t.isVariableDeclarator(path.node)) {\n    componentName = path.node.id.name;\n    componentType = 'arrow';\n  }\n  \n  // Skip if component doesn't have a name\n  if (!componentName) {\n    return null;\n  }\n  \n  // Extract props\n  if (t.isFunctionDeclaration(path.node) && path.node.params.length > 0) {\n    props = extractProps(path.node.params[0]);\n  } else if (t.isVariableDeclarator(path.node) && \n             path.node.init.params && \n             path.node.init.params.length > 0) {\n    props = extractProps(path.node.init.params[0]);\n  }\n  \n  // Analyze component code to infer purpose\n  const purpose = inferPurpose(componentName);\n  \n  // Extract JSX structure (simplified)\n  const jsxElements = [];\n  path.traverse({\n    JSXElement(jsxPath) {\n      const element = {\n        type: jsxPath.node.openingElement.name.name,\n        hasChildren: jsxPath.node.children.length > 0\n      };\n      jsxElements.push(element);\n    }\n  });\n  \n  // Extract event handlers\n  const eventHandlers = [];\n  path.traverse({\n    JSXAttribute(attrPath) {\n      const name = attrPath.node.name.name;\n      if (name.startsWith('on') && name.length > 2) {\n        eventHandlers.push(name);\n      }\n    }\n  });\n  \n  return {\n    name: componentName,\n    type: componentType,\n    props,\n    purpose,\n    jsxElements,\n    eventHandlers,\n    node: path.node\n  };\n}\n\n/**\n * Helper: Extract class component information\n * @param {Object} path - Babel path\n * @returns {Object|null} Component information\n */\nfunction extractClassComponent(path) {\n  if (!path.node.id) {\n    return null;\n  }\n  \n  const componentName = path.node.id.name;\n  \n  // Get component methods\n  const methods = [];\n  path.traverse({\n    ClassMethod(methodPath) {\n      if (methodPath.node.key) {\n        methods.push(methodPath.node.key.name);\n      }\n    }\n  });\n  \n  // Extract JSX structure from render method\n  const jsxElements = [];\n  path.traverse({\n    ClassMethod(methodPath) {\n      if (methodPath.node.key && methodPath.node.key.name === 'render') {\n        methodPath.traverse({\n          JSXElement(jsxPath) {\n            const element = {\n              type: jsxPath.node.openingElement.name.name,\n              hasChildren: jsxPath.node.children.length > 0\n            };\n            jsxElements.push(element);\n          }\n        });\n      }\n    }\n  });\n  \n  // Extract event handlers\n  const eventHandlers = [];\n  path.traverse({\n    JSXAttribute(attrPath) {\n      const name = attrPath.node.name.name;\n      if (name.startsWith('on') && name.length > 2) {\n        eventHandlers.push(name);\n      }\n    }\n  });\n  \n  // Analyze component name to infer purpose\n  const purpose = inferPurpose(componentName);\n  \n  return {\n    name: componentName,\n    type: 'class',\n    methods,\n    jsxElements,\n    eventHandlers,\n    purpose,\n    node: path.node\n  };\n}\n\n/**\n * Helper: Extract props from a component parameter\n * @param {Object} param - Babel parameter node\n * @returns {Array} Array of prop metadata\n */\nfunction extractProps(param) {\n  const props = [];\n  \n  // Handle object pattern (destructured props)\n  if (t.isObjectPattern(param)) {\n    param.properties.forEach(prop => {\n      if (t.isObjectProperty(prop) && t.isIdentifier(prop.key)) {\n        props.push({\n          name: prop.key.name,\n          required: false\n        });\n      } else if (t.isRestElement(prop) && t.isIdentifier(prop.argument)) {\n        props.push({\n          name: prop.argument.name,\n          isRest: true\n        });\n      }\n    });\n  } \n  // Handle identifier (props as a single object)\n  else if (t.isIdentifier(param)) {\n    props.push({\n      name: param.name,\n      isObject: true\n    });\n  }\n  \n  return props;\n}\n\n/**\n * Helper: Infer purpose from component name\n * @param {string} componentName - Component name\n * @returns {string} Inferred purpose\n */\nfunction inferPurpose(componentName) {\n  // Basic pattern matching for common component types\n  if (/button/i.test(componentName)) {\n    return 'action-button';\n  } else if (/card/i.test(componentName)) {\n    return 'display-card';\n  } else if (/list/i.test(componentName)) {\n    return 'list-container';\n  } else if (/item/i.test(componentName)) {\n    return 'list-item';\n  } else if (/form/i.test(componentName)) {\n    return 'input-form';\n  } else if (/input/i.test(componentName)) {\n    return 'input-field';\n  } else if (/nav/i.test(componentName)) {\n    return 'navigation';\n  } else if (/header/i.test(componentName)) {\n    return 'page-header';\n  } else if (/footer/i.test(componentName)) {\n    return 'page-footer';\n  } else if (/modal/i.test(componentName)) {\n    return 'modal-dialog';\n  } else if (/table/i.test(componentName)) {\n    return 'data-table';\n  } else if (/chart/i.test(componentName) || /graph/i.test(componentName)) {\n    return 'data-visualization';\n  } else if (/container/i.test(componentName)) {\n    return 'layout-container';\n  } else if (/layout/i.test(componentName)) {\n    return 'page-layout';\n  } else if (/sidebar/i.test(componentName)) {\n    return 'navigation-sidebar';\n  } else if (/tab/i.test(componentName)) {\n    return 'navigation-tab';\n  } else if (/dialog/i.test(componentName)) {\n    return 'dialog-box';\n  } else if (/alert/i.test(componentName) || /notification/i.test(componentName)) {\n    return 'notification';\n  } else if (/icon/i.test(componentName)) {\n    return 'decorative-icon';\n  }\n  \n  return 'ui-component';\n}\n\n/**\n * Helper: Enhance a function component with Aartisan features\n * @param {string} code - Original component code\n * @param {Object} component - Component information\n * @param {string} level - Enhancement level\n * @returns {string} Enhanced component code\n */\nfunction enhanceFunctionComponent(code, component, level) {\n  // Special handling for App component\n  if (component.name === 'App') {\n    // For App component, only use basic directives and avoid hooks\n    return addBasicDirectivesToAppComponent(code, component);\n  }\n\n  // Choose enhancement method based on the level\n  if (level === 'basic') {\n    return addBasicDirectives(code, component);\n  } else if (level === 'advanced') {\n    return convertToDefineComponent(code, component);\n  } else {\n    // Default to 'standard' level - using hooks\n    return addAIEnhancedHook(code, component);\n  }\n}\n\n/**\n * Special method for App component to add basic directives without hooks\n * @param {string} code - Original component code\n * @param {Object} component - Component information\n * @returns {string} Enhanced component code\n */\nfunction addBasicDirectivesToAppComponent(code, component) {\n  try {\n    // Parse the code\n    const ast = parser.parse(code, {\n      sourceType: 'module',\n      plugins: ['jsx', 'typescript']\n    });\n    \n    let modified = false;\n    \n    // Find the return statement in the App component\n    traverse(ast, {\n      ReturnStatement(path) {\n        // Only process JSX returns\n        if (t.isJSXElement(path.node.argument)) {\n          const jsx = path.node.argument;\n          const openingElement = jsx.openingElement;\n          \n          // Check if it already has aartisan attributes\n          if (!hasAartisanAttributes(openingElement)) {\n            // Add data-aartisan attribute\n            openingElement.attributes.push(\n              t.jsxAttribute(\n                t.jsxIdentifier('data-aartisan'),\n                t.stringLiteral('true')\n              )\n            );\n            \n            // Add component purpose attribute\n            openingElement.attributes.push(\n              t.jsxAttribute(\n                t.jsxIdentifier('data-aartisan-purpose'),\n                t.stringLiteral('application-root')\n              )\n            );\n            \n            // Add component name attribute\n            openingElement.attributes.push(\n              t.jsxAttribute(\n                t.jsxIdentifier('data-aartisan-component'),\n                t.stringLiteral('App')\n              )\n            );\n            \n            modified = true;\n          }\n        }\n      }\n    });\n    \n    // Only generate new code if modifications were made\n    if (modified) {\n      // Generate the modified code\n      const output = generate(ast, {}, code);\n      return output.code;\n    }\n    \n    // If no modifications were made, return the original code\n    return code;\n  } catch (error) {\n    // If parsing fails, return the original code\n    console.warn(`Warning: App component enhancement failed: ${error.message}`);\n    return code;\n  }\n}\n\n/**\n * Helper: Enhance a class component with Aartisan features\n * @param {string} code - Original component code\n * @param {Object} component - Component information\n * @param {string} level - Enhancement level\n * @returns {string} Enhanced component code\n */\nfunction enhanceClassComponent(code, component, level) {\n  // Class components primarily use the HOC approach\n  if (level === 'advanced') {\n    return wrapWithAIEnhancementHOC(code, component);\n  } else {\n    // For basic and standard, add directives to the render method\n    return addDirectivesToClassRender(code, component);\n  }\n}\n\n/**\n * Method 1: Add basic directives to a component\n * @param {string} code - Original component code\n * @param {Object} component - Component information\n * @returns {string} Enhanced component code\n */\nfunction addBasicDirectives(code, component) {\n  try {\n    // Parse the code\n    const ast = parser.parse(code, {\n      sourceType: 'module',\n      plugins: ['jsx', 'typescript']\n    });\n    \n    let modified = false;\n    let rootElementsFound = 0;\n    \n    // Add directives to the root JSX element\n    traverse(ast, {\n      JSXElement(path) {\n        // Only enhance the root element\n        if (isRootJSXElement(path)) {\n          rootElementsFound++;\n          const openingElement = path.node.openingElement;\n          \n          // Check if it already has aartisan attributes\n          if (!hasAartisanAttributes(openingElement)) {\n            // Add data-aartisan attribute\n            openingElement.attributes.push(\n              t.jsxAttribute(\n                t.jsxIdentifier('data-aartisan'),\n                t.stringLiteral('true')\n              )\n            );\n            \n            // Add component purpose attribute\n            openingElement.attributes.push(\n              t.jsxAttribute(\n                t.jsxIdentifier('data-aartisan-purpose'),\n                t.stringLiteral(component.purpose)\n              )\n            );\n            \n            // Add component name attribute\n            openingElement.attributes.push(\n              t.jsxAttribute(\n                t.jsxIdentifier('data-aartisan-component'),\n                t.stringLiteral(component.name)\n              )\n            );\n            \n            modified = true;\n          }\n        }\n      }\n    });\n    \n    // Only generate new code if modifications were made\n    if (modified) {\n      console.log(`Enhanced ${component.name}: Added directives to ${rootElementsFound} JSX root elements`);\n      \n      // Generate the modified code\n      const output = generate(ast, {}, code);\n      return output.code;\n    } else {\n      console.log(`No enhancements applied to ${component.name} (found ${rootElementsFound} root elements)`);\n    }\n    \n    // If no modifications were made, return the original code\n    return code;\n  } catch (error) {\n    // If parsing fails, return the original code\n    console.warn(`Warning: Basic directive enhancement failed for ${component.name}: ${error.message}`);\n    return code;\n  }\n}\n\n/**\n * Method 2: Add useAIEnhanced hook to a component\n * @param {string} code - Original component code\n * @param {Object} component - Component information\n * @returns {string} Enhanced component code\n */\nfunction addAIEnhancedHook(code, component) {\n  try {\n    // Parse the code\n    const ast = parser.parse(code, {\n      sourceType: 'module',\n      plugins: ['jsx', 'typescript']\n    });\n    \n    let modified = false;\n    \n    // Add the hook\n    traverse(ast, {\n      // For function declarations\n      FunctionDeclaration(path) {\n        if (path.node.id && path.node.id.name === component.name) {\n          modified = addHookToFunction(path, component) || modified;\n        }\n      },\n      // For arrow functions\n      VariableDeclarator(path) {\n        if (path.node.id && path.node.id.name === component.name && \n            t.isArrowFunctionExpression(path.node.init)) {\n          modified = addHookToArrowFunction(path, component) || modified;\n        }\n      }\n    });\n    \n    if (!modified) {\n      // If hook couldn't be added, fall back to basic method\n      return addBasicDirectives(code, component);\n    }\n    \n    // Generate the modified code\n    const output = generate(ast, {}, code);\n    return output.code;\n  } catch (error) {\n    // If parsing fails, fall back to basic method\n    console.warn(`Warning: Hook enhancement failed for ${component.name}: ${error.message}`);\n    return addBasicDirectives(code, component);\n  }\n}\n\n/**\n * Method 3: Convert to defineComponent approach\n * @param {string} code - Original component code\n * @param {Object} component - Component information\n * @returns {string} Enhanced component code\n */\nfunction convertToDefineComponent(code, component) {\n  try {\n    // Parse the code\n    const ast = parser.parse(code, {\n      sourceType: 'module',\n      plugins: ['jsx', 'typescript']\n    });\n    \n    // Convert function to defineComponent\n    // This is more complex as we need to restructure the component\n    // For now, we'll fall back to the hook approach\n    return addAIEnhancedHook(code, component);\n  } catch (error) {\n    console.warn(`Warning: defineComponent conversion failed for ${component.name}: ${error.message}`);\n    return addAIEnhancedHook(code, component);\n  }\n}\n\n/**\n * Method 4: Add directives to class component render method\n * @param {string} code - Original component code\n * @param {Object} component - Component information\n * @returns {string} Enhanced component code\n */\nfunction addDirectivesToClassRender(code, component) {\n  try {\n    // Parse the code\n    const ast = parser.parse(code, {\n      sourceType: 'module',\n      plugins: ['jsx', 'typescript']\n    });\n    \n    let directivesAdded = false;\n    \n    // Find render method and add directives\n    traverse(ast, {\n      ClassMethod(path) {\n        if (path.node.key && path.node.key.name === 'render') {\n          path.traverse({\n            JSXElement(jsxPath) {\n              // Only enhance the root element\n              if (isRootJSXElement(jsxPath)) {\n                const openingElement = jsxPath.node.openingElement;\n                \n                // Check if it already has aartisan attributes\n                if (!hasAartisanAttributes(openingElement)) {\n                  // Add data-aartisan attribute\n                  openingElement.attributes.push(\n                    t.jsxAttribute(\n                      t.jsxIdentifier('data-aartisan'),\n                      t.stringLiteral('true')\n                    )\n                  );\n                  \n                  // Add component purpose attribute\n                  openingElement.attributes.push(\n                    t.jsxAttribute(\n                      t.jsxIdentifier('data-aartisan-purpose'),\n                      t.stringLiteral(component.purpose)\n                    )\n                  );\n                  \n                  // Add component name attribute\n                  openingElement.attributes.push(\n                    t.jsxAttribute(\n                      t.jsxIdentifier('data-aartisan-component'),\n                      t.stringLiteral(component.name)\n                    )\n                  );\n                  \n                  directivesAdded = true;\n                }\n              }\n            }\n          });\n        }\n      }\n    });\n    \n    if (!directivesAdded) {\n      // If directives couldn't be added, keep the original code\n      return code;\n    }\n    \n    // Generate the modified code\n    const output = generate(ast, {}, code);\n    return output.code;\n  } catch (error) {\n    console.warn(`Warning: Class directive enhancement failed for ${component.name}: ${error.message}`);\n    return code;\n  }\n}\n\n/**\n * Method 5: Wrap class component with withAIEnhancement HOC\n * @param {string} code - Original component code\n * @param {Object} component - Component information\n * @returns {string} Enhanced component code\n */\nfunction wrapWithAIEnhancementHOC(code, component) {\n  // This would be a more extensive transformation\n  // For now, we'll use the simpler directives approach\n  return addDirectivesToClassRender(code, component);\n}\n\n/**\n * Helper: Add useAIEnhanced hook to a function component\n * @param {Object} path - Babel path\n * @param {Object} component - Component information\n */\nfunction addHookToFunction(path, component) {\n  // Create the hook call\n  const hookCall = t.variableDeclaration(\n    'const',\n    [t.variableDeclarator(\n      t.objectPattern([\n        t.objectProperty(t.identifier('ref'), t.identifier('ref'), false, true),\n        t.objectProperty(t.identifier('aiProps'), t.identifier('aiProps'), false, true)\n      ]),\n      t.callExpression(\n        t.identifier('useAIEnhanced'),\n        [\n          t.stringLiteral(component.name),\n          t.objectExpression([\n            t.objectProperty(\n              t.identifier('purpose'),\n              t.stringLiteral(component.purpose)\n            ),\n            t.objectProperty(\n              t.identifier('interactions'),\n              t.arrayExpression(\n                component.eventHandlers\n                  .filter(handler => handler && handler.startsWith('on'))\n                  .map(handler => handler.replace(/^on/, '').toLowerCase())\n                  .map(interaction => t.stringLiteral(interaction))\n              )\n            )\n          ])\n        ]\n      )\n    )]\n  );\n  \n  let modified = false;\n  \n  // Add hook at the beginning of the function body\n  if (t.isBlockStatement(path.node.body)) {\n    path.node.body.body.unshift(hookCall);\n    \n    // Find the return statement with JSX\n    let returnFound = false;\n    path.traverse({\n      ReturnStatement(returnPath) {\n        // Only process the first return with JSX\n        if (returnFound) return;\n        \n        if (t.isJSXElement(returnPath.node.argument) || \n            (t.isJSXExpressionContainer(returnPath.node.argument) && \n             t.isJSXElement(returnPath.node.argument.expression))) {\n              \n          let jsx = t.isJSXElement(returnPath.node.argument) ? \n                    returnPath.node.argument : \n                    returnPath.node.argument.expression;\n                    \n          // Add ref and aiProps to the root JSX element\n          const openingElement = jsx.openingElement;\n          \n          // Add ref attribute if not present\n          if (!openingElement.attributes.some(attr => \n            t.isJSXAttribute(attr) && attr.name.name === 'ref'\n          )) {\n            openingElement.attributes.push(\n              t.jsxAttribute(\n                t.jsxIdentifier('ref'),\n                t.jsxExpressionContainer(t.identifier('ref'))\n              )\n            );\n          }\n          \n          // Add spread aiProps\n          openingElement.attributes.push(\n            t.jsxSpreadAttribute(t.identifier('aiProps'))\n          );\n          \n          returnFound = true;\n          modified = true;\n        }\n      }\n    });\n  }\n  \n  return modified;\n}\n\n/**\n * Helper: Add useAIEnhanced hook to an arrow function component\n * @param {Object} path - Babel path\n * @param {Object} component - Component information\n */\nfunction addHookToArrowFunction(path, component) {\n  // Create the hook call\n  const hookCall = t.variableDeclaration(\n    'const',\n    [t.variableDeclarator(\n      t.objectPattern([\n        t.objectProperty(t.identifier('ref'), t.identifier('ref'), false, true),\n        t.objectProperty(t.identifier('aiProps'), t.identifier('aiProps'), false, true)\n      ]),\n      t.callExpression(\n        t.identifier('useAIEnhanced'),\n        [\n          t.stringLiteral(component.name),\n          t.objectExpression([\n            t.objectProperty(\n              t.identifier('purpose'),\n              t.stringLiteral(component.purpose)\n            ),\n            t.objectProperty(\n              t.identifier('interactions'),\n              t.arrayExpression(\n                component.eventHandlers\n                  .filter(handler => handler && handler.startsWith('on'))\n                  .map(handler => handler.replace(/^on/, '').toLowerCase())\n                  .map(interaction => t.stringLiteral(interaction))\n              )\n            )\n          ])\n        ]\n      )\n    )]\n  );\n  \n  let modified = false;\n  \n  // Handle different arrow function body types\n  if (t.isBlockStatement(path.node.init.body)) {\n    // For arrow functions with block bodies\n    path.node.init.body.body.unshift(hookCall);\n    \n    // Find the return statement with JSX\n    let returnFound = false;\n    path.get('init').traverse({\n      ReturnStatement(returnPath) {\n        // Only process the first return with JSX\n        if (returnFound) return;\n        \n        if (t.isJSXElement(returnPath.node.argument) || \n            (t.isJSXExpressionContainer(returnPath.node.argument) && \n             t.isJSXElement(returnPath.node.argument.expression))) {\n          \n          let jsx = t.isJSXElement(returnPath.node.argument) ? \n                    returnPath.node.argument : \n                    returnPath.node.argument.expression;\n          \n          enhanceJSXElement(jsx);\n          returnFound = true;\n          modified = true;\n        }\n      }\n    });\n  } else if (t.isJSXElement(path.node.init.body)) {\n    // For arrow functions with JSX expression bodies\n    const jsx = path.node.init.body;\n    enhanceJSXElement(jsx);\n    \n    // Convert to block statement with hook and return\n    path.node.init.body = t.blockStatement([\n      hookCall,\n      t.returnStatement(jsx)\n    ]);\n    \n    modified = true;\n  }\n  \n  return modified;\n}\n\n/**\n * Helper: Enhance a JSX element with ref and aiProps\n * @param {Object} jsx - JSX element node\n */\nfunction enhanceJSXElement(jsx) {\n  if (!jsx || !jsx.openingElement) return;\n  \n  const openingElement = jsx.openingElement;\n  \n  // Add ref attribute if not present\n  if (!openingElement.attributes.some(attr => \n    t.isJSXAttribute(attr) && attr.name.name === 'ref'\n  )) {\n    openingElement.attributes.push(\n      t.jsxAttribute(\n        t.jsxIdentifier('ref'),\n        t.jsxExpressionContainer(t.identifier('ref'))\n      )\n    );\n  }\n  \n  // Add spread aiProps\n  openingElement.attributes.push(\n    t.jsxSpreadAttribute(t.identifier('aiProps'))\n  );\n}\n\n/**\n * Helper: Check if a JSX element is the root element in a component\n * @param {Object} path - Babel path\n * @returns {boolean} Whether it's the root element\n */\nfunction isRootJSXElement(path) {\n  // Check if direct child of return statement\n  if (t.isReturnStatement(path.parent)) {\n    return true;\n  }\n  \n  // Check if direct child of arrow function\n  if (t.isArrowFunctionExpression(path.parent) && path.parent.body === path.node) {\n    return true;\n  }\n  \n  // Check if inside a JSXExpressionContainer in a return statement\n  if (t.isJSXExpressionContainer(path.parent) && \n      t.isReturnStatement(path.parent.parent)) {\n    return true;\n  }\n  \n  // Check parent chain for potential return statement (handles nested expressions)\n  // MODIFIED: adding depth limit to prevent stack overflow\n  let currentPath = path.parentPath;\n  let depth = 0;\n  const MAX_DEPTH = 10; // Prevent infinite recursion\n  \n  while (currentPath && depth < MAX_DEPTH) {\n    if (t.isReturnStatement(currentPath.node)) {\n      // Check if this is the primary expression being returned\n      const returnArg = currentPath.node.argument;\n      if (returnArg === path.node || \n          (t.isJSXExpressionContainer(returnArg) && returnArg.expression === path.node)) {\n        return true;\n      }\n      break;\n    }\n    currentPath = currentPath.parentPath;\n    depth++;\n  }\n  \n  return false;\n}\n\n/**\n * Helper: Check if JSX element has aartisan attributes\n * @param {Object} openingElement - JSX opening element\n * @returns {boolean} Whether it has aartisan attributes\n */\nfunction hasAartisanAttributes(openingElement) {\n  return openingElement.attributes.some(attr => \n    t.isJSXAttribute(attr) && \n    attr.name.name === 'data-aartisan'\n  );\n}\n\n/**\n * Helper: Add necessary imports for Aartisan features\n * @param {string} code - Original component code\n * @param {Array} components - Component information\n * @param {string} level - Enhancement level\n * @returns {string} Code with imports added\n */\nfunction addAartisanImports(code, components, level) {\n  try {\n    // Parse the code\n    const ast = parser.parse(code, {\n      sourceType: 'module',\n      plugins: ['jsx', 'typescript']\n    });\n    \n    let importNeeded = false;\n    let importType = '';\n    \n    // Determine what imports are needed based on the enhancement level and components\n    if (level === 'basic') {\n      importNeeded = true;\n      importType = 'directive';\n    } else if (level === 'advanced') {\n      importNeeded = true;\n      importType = 'defineComponent';\n    } else {\n      // For standard level, check if any function components use hooks\n      importNeeded = components.some(comp => comp.type === 'function' || comp.type === 'arrow');\n      importType = 'hook';\n    }\n    \n    if (!importNeeded) {\n      return code;\n    }\n    \n    // Check if aartisan is already imported\n    let hasAartisanImport = false;\n    let existingImportPath = null;\n    \n    traverse(ast, {\n      ImportDeclaration(path) {\n        if (path.node.source.value.includes('aartisan')) {\n          hasAartisanImport = true;\n          existingImportPath = path;\n        }\n      }\n    });\n    \n    // Create import specifiers based on the enhancement type\n    let importSpecifiers = [];\n    if (importType === 'directive') {\n      importSpecifiers = [\n        t.importSpecifier(t.identifier('aiPurpose'), t.identifier('aiPurpose')),\n        t.importSpecifier(t.identifier('aiInteraction'), t.identifier('aiInteraction'))\n      ];\n    } else if (importType === 'hook') {\n      importSpecifiers = [\n        t.importSpecifier(t.identifier('useAIEnhanced'), t.identifier('useAIEnhanced'))\n      ];\n    } else if (importType === 'defineComponent') {\n      importSpecifiers = [\n        t.importSpecifier(t.identifier('defineComponent'), t.identifier('defineComponent'))\n      ];\n    }\n    \n    // Add or update import\n    if (hasAartisanImport && existingImportPath) {\n      // Add to existing import\n      importSpecifiers.forEach(specifier => {\n        if (!existingImportPath.node.specifiers.some(s => \n          t.isImportSpecifier(s) && s.imported.name === specifier.imported.name\n        )) {\n          existingImportPath.node.specifiers.push(specifier);\n        }\n      });\n    } else {\n      // Add new import\n      const importDeclaration = t.importDeclaration(\n        importSpecifiers,\n        t.stringLiteral('aartisan/react')\n      );\n      \n      ast.program.body.unshift(importDeclaration);\n    }\n    \n    // Generate the modified code\n    const output = generate(ast, {}, code);\n    return output.code;\n  } catch (error) {\n    console.warn(`Warning: Failed to add imports: ${error.message}`);\n    return code;\n  }\n}\n\n/**\n * Helper: Simulate AI analysis for a component\n * @param {Object} component - Component information\n * @param {string} providerId - AI provider ID\n * @returns {Promise<Object>} AI analysis results\n */\nasync function simulateAIAnalysis(component, providerId) {\n  // This is a placeholder implementation\n  // In a real implementation, this would call the AI provider API\n  \n  // Simulate response delay\n  await new Promise(resolve => setTimeout(resolve, 100));\n  \n  // Generate some basic analysis based on the component properties\n  const enhancedPurpose = component.purpose;\n  const relatedComponents = [];\n  const accessibility = {\n    level: 'medium',\n    recommendations: []\n  };\n  \n  // Add some accessibility recommendations based on component type\n  if (component.purpose === 'action-button') {\n    accessibility.recommendations.push('Ensure button has accessible name');\n    accessibility.recommendations.push('Add appropriate ARIA role if needed');\n  } else if (component.purpose === 'input-field') {\n    accessibility.recommendations.push('Associate label with input');\n    accessibility.recommendations.push('Add clear error messages');\n  }\n  \n  return {\n    enhancedPurpose,\n    relatedComponents,\n    accessibility,\n    providerId\n  };\n}\n\n/**\n * Helper: Generate README content for the ported project\n * @param {Object} context - Porting context\n * @returns {string} README content\n */\nfunction generateReadme(context) {\n  const projectName = context.projectInfo.packageJson.name || 'Aartisan Project';\n  \n  return `# ${projectName} (Aartisan Enhanced)\n\nThis project has been enhanced with [Aartisan](https://github.com/whyismynamerudy/aartisan), the AI Agent Toolkit for React.\n\n## Aartisan Features\n\n- 🧩 **Enhanced Components**: React components are enhanced with semantic metadata\n- 🤖 **AI-Optimized**: Components are more easily understood by AI assistants\n- 🔌 **Build-time Optimization**: Includes Vite/Webpack integration\n- 🧠 **Semantic Context**: Applications provide rich context about their structure and purpose\n\n## Getting Started\n\n1. Install dependencies:\n\n\\`\\`\\`bash\nnpm install\n\\`\\`\\`\n\n2. Start the development server:\n\n\\`\\`\\`bash\nnpm run dev\n\\`\\`\\`\n\n## Using Aartisan Features\n\nThe ported application includes several ways to enhance components:\n\n### Component Introspection\n\\`\\`\\`jsx\nimport { defineComponent } from 'aartisan/react';\n\nconst Button = defineComponent({\n  name: 'Button',\n  semantics: {\n    purpose: 'interactive-button',\n    interactions: ['click']\n  },\n  render: (props) => (\n    <button onClick={props.onClick}>\n      {props.children}\n    </button>\n  )\n});\n\\`\\`\\`\n\n### React Hooks\n\\`\\`\\`jsx\nimport { useAIEnhanced } from 'aartisan/react';\n\nfunction ProductCard({ name, price }) {\n  const { ref, aiProps } = useAIEnhanced('product-card', {\n    purpose: 'display-product',\n    interactions: ['view', 'purchase']\n  });\n  \n  return (\n    <div ref={ref} {...aiProps}>\n      <h3>{name}</h3>\n      <p>${price}</p>\n    </div>\n  );\n}\n\\`\\`\\`\n\n### Component Directives\n\\`\\`\\`jsx\nimport { aiPurpose } from 'aartisan/directives';\n\nfunction Header() {\n  return (\n    <header {...aiPurpose('page-header')}>\n      <h1>My App</h1>\n    </header>\n  );\n}\n\\`\\`\\`\n\n## Learn More\n\n- [Aartisan Documentation](https://github.com/whyismynamerudy/aartisan)\n- [React Documentation](https://react.dev/)\n`;\n}\n\n/**\n * Helper: Generate Aartisan section for an existing README\n * @returns {string} README section\n */\nfunction generateAartisanReadmeSection() {\n  return `\n## Aartisan Enhancement\n\nThis project has been enhanced with [Aartisan](https://github.com/whyismynamerudy/aartisan), the AI Agent Toolkit for React.\n\n### Aartisan Features\n\n- 🧩 **Enhanced Components**: React components are enhanced with semantic metadata\n- 🤖 **AI-Optimized**: Components are more easily understood by AI assistants\n- 🔌 **Build-time Optimization**: Includes Vite/Webpack integration\n- 🧠 **Semantic Context**: Applications provide rich context about their structure and purpose\n\nSee the [Aartisan documentation](https://github.com/whyismynamerudy/aartisan) for more details.\n`;\n}"],"names":["aiProviders","gemini","name","available","capabilities","cohere","initializeProviders","options","geminiApiKey","console","log","error","message","cohereApiKey","getBestProvider","id","isAIAvailable","traverse","traverseModule","generate","generateModule","__filename","fileURLToPath","import","meta","url","path","dirname","portCommand","program","command","description","argument","option","action","source","chalk","cyan","sourcePath","resolve","process","cwd","fs","pathExists","red","exit","outputPath","output","yes","answers","inquirer","prompt","type","default","basename","files","readdir","length","overwrite","yellow","apiKey","aiProvider","spinner","ora","start","undefined","succeed","fail","warn","choices","when","useAI","validate","input","trim","portProject","verbose","phases","fn","analyzeProjectStructure","copyProjectFiles","transformComponents","integrateAartisanProvider","updateConfiguration","finalizeProject","context","projectInfo","componentMap","Map","entryPoints","routeFiles","phase","green","relative","packageJsonPath","join","packageJson","readJson","dependencies","react","Error","devDependencies","buildSystem","usesTypeScript","router","extensions","componentFiles","findFiles","dir","entries","withFileTypes","entry","fullPath","isDirectory","includes","isFile","ext","extname","push","ensureDir","copy","filter","src","relativePath","startsWith","enhancementLevel","level","sourceFilePath","destFilePath","content","readFile","ast","parser","sourceType","plugins","tokens","components","FunctionDeclaration","isReactComponent","component","extractComponent","VariableDeclarator","t","node","init","ClassDeclaration","isReactClassComponent","extractClassComponent","set","enhancedFiles","fileInfo","newContent","contentModified","provider","aiEnhancement","simulateAIAnalysis","aiSuggestions","enhancedContent","enhanceFunctionComponent","enhanceClassComponent","withImports","addAartisanImports","writeFile","mainEntryFiles","file","filename","toLowerCase","filesToCheck","integrationSuccessful","entryFile","outputFilePath","modified","Program","hasAartisanImport","body","some","value","specifiers","spec","local","importDeclaration","unshift","rootElementFound","CallExpression","callee","property","calleeObject","object","arguments","renderArg","isWrappedWithAartisanProvider","wrapWithAartisanProvider","code","stack","createWrapper","createWrapperFile","openingElement","expression","configExpression","nodeName","appFilePath","wrapperFilePath","appFileName","wrapperContent","entryFiles","entryFileUpdated","replace","aartisan","writeJson","spaces","configureVite","configureWebpack","configureCRA","readmePath","readmeContent","generateReadme","existingReadme","aartisanInfo","generateAartisanReadmeSection","viteConfigPaths","viteConfigPath","configPath","configArg","pluginsProperty","properties","find","prop","key","hasAartisanPlugin","elements","element","aartisanOptions","aartisanCall","returnsJSX","ReturnStatement","returnPath","returnArg","get","superClass","componentName","componentType","props","params","extractProps","purpose","inferPurpose","jsxElements","JSXElement","jsxPath","hasChildren","children","eventHandlers","JSXAttribute","attrPath","methods","ClassMethod","methodPath","param","forEach","required","isRest","isObject","test","addBasicDirectivesToAppComponent","addBasicDirectives","convertToDefineComponent","addAIEnhancedHook","jsx","hasAartisanAttributes","attributes","wrapWithAIEnhancementHOC","addDirectivesToClassRender","rootElementsFound","isRootJSXElement","addHookToFunction","addHookToArrowFunction","directivesAdded","hookCall","handler","map","interaction","returnFound","attr","enhanceJSXElement","parent","currentPath","parentPath","depth","MAX_DEPTH","importNeeded","importType","comp","existingImportPath","ImportDeclaration","importSpecifiers","specifier","s","imported","providerId","Promise","setTimeout","enhancedPurpose","relatedComponents","accessibility","recommendations","projectName","price"],"mappings":"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"}