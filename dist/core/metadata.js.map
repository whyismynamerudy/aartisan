{"version":3,"file":"metadata.js","sources":["../../src/core/metadata.js"],"sourcesContent":["/**\n * aartisan - Metadata system\n * \n * Handles creation, validation, and enhancement of semantic metadata\n * for AI agent understanding.\n */\n\n/**\n * Creates a metadata object with semantic information\n * @param {Object} options - Metadata options\n * @param {string} options.name - Component/element name\n * @param {string} options.purpose - Purpose of the component/element\n * @param {string[]} options.interactions - Possible interactions\n * @param {Object} options.props - Props description\n * @param {Object} options.semantics - Additional semantic information\n * @returns {Object} Metadata object\n */\nexport function createMetadata({\n    name,\n    purpose,\n    interactions = [],\n    props = {},\n    semantics = {}\n  } = {}) {\n    return {\n      name,\n      purpose,\n      interactions,\n      props,\n      semantics,\n      timestamp: new Date().toISOString(),\n      version: '0.1.0'\n    };\n  }\n  \n  /**\n   * Retrieves metadata from an enhanced element\n   * @param {Object} element - Enhanced element\n   * @returns {Object|null} Metadata or null if not enhanced\n   */\n  export function getMetadata(element) {\n    if (element && element.__aartisan) {\n      return element.__aartisan;\n    }\n    return null;\n  }\n  \n  /**\n   * Enhances existing metadata with additional information\n   * @param {Object} metadata - Existing metadata\n   * @param {Object} enhancement - Additional metadata to merge\n   * @returns {Object} Enhanced metadata\n   */\n  export function enhanceMetadata(metadata, enhancement) {\n    return {\n      ...metadata,\n      ...enhancement,\n      semantics: {\n        ...(metadata.semantics || {}),\n        ...(enhancement.semantics || {})\n      },\n      // Keep original timestamp but add update timestamp\n      created: metadata.timestamp || metadata.created || new Date().toISOString(),\n      updated: new Date().toISOString()\n    };\n  }\n  \n  /**\n   * Validates metadata for completeness and correctness\n   * @param {Object} metadata - Metadata to validate\n   * @returns {Object} Validation result { valid: boolean, errors: string[] }\n   */\n  export function validateMetadata(metadata) {\n    const errors = [];\n    \n    if (!metadata) {\n      return { valid: false, errors: ['Metadata is null or undefined'] };\n    }\n    \n    // Check required fields\n    if (!metadata.name) {\n      errors.push('Missing required field: name');\n    }\n    \n    if (!metadata.purpose) {\n      errors.push('Missing required field: purpose');\n    }\n    \n    // Check types\n    if (metadata.interactions && !Array.isArray(metadata.interactions)) {\n      errors.push('Field \"interactions\" must be an array');\n    }\n    \n    if (metadata.props && typeof metadata.props !== 'object') {\n      errors.push('Field \"props\" must be an object');\n    }\n    \n    return {\n      valid: errors.length === 0,\n      errors\n    };\n  }"],"names":["createMetadata","name","purpose","interactions","props","semantics","timestamp","Date","toISOString","version","getMetadata","element","__aartisan","enhanceMetadata","metadata","enhancement","created","updated","validateMetadata","errors","valid","push","Array","isArray","length"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,cAAcA,CAAC;EAC3BC,IAAI;EACJC,OAAO;AACPC,EAAAA,YAAY,GAAG,EAAE;EACjBC,KAAK,GAAG,EAAE;AACVC,EAAAA,SAAS,GAAG;AACd,CAAC,GAAG,EAAE,EAAE;EACN,OAAO;IACLJ,IAAI;IACJC,OAAO;IACPC,YAAY;IACZC,KAAK;IACLC,SAAS;IACTC,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;AACnCC,IAAAA,OAAO,EAAE;GACV;AACH;;AAEA;AACF;AACA;AACA;AACA;AACS,SAASC,WAAWA,CAACC,OAAO,EAAE;AACnC,EAAA,IAAIA,OAAO,IAAIA,OAAO,CAACC,UAAU,EAAE;IACjC,OAAOD,OAAO,CAACC,UAAU;AAC3B;AACA,EAAA,OAAO,IAAI;AACb;;AAEA;AACF;AACA;AACA;AACA;AACA;AACS,SAASC,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EACrD,OAAO;AACL,IAAA,GAAGD,QAAQ;AACX,IAAA,GAAGC,WAAW;AACdV,IAAAA,SAAS,EAAE;AACT,MAAA,IAAIS,QAAQ,CAACT,SAAS,IAAI,EAAE,CAAC;AAC7B,MAAA,IAAIU,WAAW,CAACV,SAAS,IAAI,EAAE;KAChC;AACD;AACAW,IAAAA,OAAO,EAAEF,QAAQ,CAACR,SAAS,IAAIQ,QAAQ,CAACE,OAAO,IAAI,IAAIT,IAAI,EAAE,CAACC,WAAW,EAAE;AAC3ES,IAAAA,OAAO,EAAE,IAAIV,IAAI,EAAE,CAACC,WAAW;GAChC;AACH;;AAEA;AACF;AACA;AACA;AACA;AACS,SAASU,gBAAgBA,CAACJ,QAAQ,EAAE;EACzC,MAAMK,MAAM,GAAG,EAAE;EAEjB,IAAI,CAACL,QAAQ,EAAE;IACb,OAAO;AAAEM,MAAAA,KAAK,EAAE,KAAK;MAAED,MAAM,EAAE,CAAC,+BAA+B;KAAG;AACpE;;AAEA;AACA,EAAA,IAAI,CAACL,QAAQ,CAACb,IAAI,EAAE;AAClBkB,IAAAA,MAAM,CAACE,IAAI,CAAC,8BAA8B,CAAC;AAC7C;AAEA,EAAA,IAAI,CAACP,QAAQ,CAACZ,OAAO,EAAE;AACrBiB,IAAAA,MAAM,CAACE,IAAI,CAAC,iCAAiC,CAAC;AAChD;;AAEA;AACA,EAAA,IAAIP,QAAQ,CAACX,YAAY,IAAI,CAACmB,KAAK,CAACC,OAAO,CAACT,QAAQ,CAACX,YAAY,CAAC,EAAE;AAClEgB,IAAAA,MAAM,CAACE,IAAI,CAAC,uCAAuC,CAAC;AACtD;EAEA,IAAIP,QAAQ,CAACV,KAAK,IAAI,OAAOU,QAAQ,CAACV,KAAK,KAAK,QAAQ,EAAE;AACxDe,IAAAA,MAAM,CAACE,IAAI,CAAC,iCAAiC,CAAC;AAChD;EAEA,OAAO;AACLD,IAAAA,KAAK,EAAED,MAAM,CAACK,MAAM,KAAK,CAAC;AAC1BL,IAAAA;GACD;AACH;;;;"}