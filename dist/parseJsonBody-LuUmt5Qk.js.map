{"version":3,"file":"parseJsonBody-LuUmt5Qk.js","sources":["../node_modules/@smithy/smithy-client/dist-es/object-mapping.js","../node_modules/@smithy/smithy-client/dist-es/serde-json.js","../node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js"],"sourcesContent":["export function map(arg0, arg1, arg2) {\n    let target;\n    let filter;\n    let instructions;\n    if (typeof arg1 === \"undefined\" && typeof arg2 === \"undefined\") {\n        target = {};\n        instructions = arg0;\n    }\n    else {\n        target = arg0;\n        if (typeof arg1 === \"function\") {\n            filter = arg1;\n            instructions = arg2;\n            return mapWithFilter(target, filter, instructions);\n        }\n        else {\n            instructions = arg1;\n        }\n    }\n    for (const key of Object.keys(instructions)) {\n        if (!Array.isArray(instructions[key])) {\n            target[key] = instructions[key];\n            continue;\n        }\n        applyInstruction(target, null, instructions, key);\n    }\n    return target;\n}\nexport const convertMap = (target) => {\n    const output = {};\n    for (const [k, v] of Object.entries(target || {})) {\n        output[k] = [, v];\n    }\n    return output;\n};\nexport const take = (source, instructions) => {\n    const out = {};\n    for (const key in instructions) {\n        applyInstruction(out, source, instructions, key);\n    }\n    return out;\n};\nconst mapWithFilter = (target, filter, instructions) => {\n    return map(target, Object.entries(instructions).reduce((_instructions, [key, value]) => {\n        if (Array.isArray(value)) {\n            _instructions[key] = value;\n        }\n        else {\n            if (typeof value === \"function\") {\n                _instructions[key] = [filter, value()];\n            }\n            else {\n                _instructions[key] = [filter, value];\n            }\n        }\n        return _instructions;\n    }, {}));\n};\nconst applyInstruction = (target, source, instructions, targetKey) => {\n    if (source !== null) {\n        let instruction = instructions[targetKey];\n        if (typeof instruction === \"function\") {\n            instruction = [, instruction];\n        }\n        const [filter = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;\n        if ((typeof filter === \"function\" && filter(source[sourceKey])) || (typeof filter !== \"function\" && !!filter)) {\n            target[targetKey] = valueFn(source[sourceKey]);\n        }\n        return;\n    }\n    let [filter, value] = instructions[targetKey];\n    if (typeof value === \"function\") {\n        let _value;\n        const defaultFilterPassed = filter === undefined && (_value = value()) != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(void 0)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed) {\n            target[targetKey] = _value;\n        }\n        else if (customFilterPassed) {\n            target[targetKey] = value();\n        }\n    }\n    else {\n        const defaultFilterPassed = filter === undefined && value != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(value)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed || customFilterPassed) {\n            target[targetKey] = value;\n        }\n    }\n};\nconst nonNullish = (_) => _ != null;\nconst pass = (_) => _;\n","export const _json = (obj) => {\n    if (obj == null) {\n        return {};\n    }\n    if (Array.isArray(obj)) {\n        return obj.filter((_) => _ != null).map(_json);\n    }\n    if (typeof obj === \"object\") {\n        const target = {};\n        for (const key of Object.keys(obj)) {\n            if (obj[key] == null) {\n                continue;\n            }\n            target[key] = _json(obj[key]);\n        }\n        return target;\n    }\n    return obj;\n};\n","import { collectBodyString } from \"../common\";\nexport const parseJsonBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        try {\n            return JSON.parse(encoded);\n        }\n        catch (e) {\n            if (e?.name === \"SyntaxError\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n    }\n    return {};\n});\nexport const parseJsonErrorBody = async (errorBody, context) => {\n    const value = await parseJsonBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nexport const loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n"],"names":[],"mappings":"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","x_google_ignoreList":[0,1,2]}