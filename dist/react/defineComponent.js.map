{"version":3,"file":"defineComponent.js","sources":["../../src/react/defineComponent.jsx"],"sourcesContent":["import React, { forwardRef, useEffect, useId } from 'react';\nimport { createMetadata } from '../core/metadata.js';\nimport { useAartisanContext } from './provider.jsx';\n\n/**\n * Defines a semantically enhanced React component\n * @param {Object} options - Component options\n * @param {string} options.name - Component name\n * @param {Object} options.semantics - Semantic metadata\n * @param {string} options.semantics.purpose - Purpose of the component\n * @param {string[]} options.semantics.interactions - Possible interactions\n * @param {Object} options.props - Props description\n * @param {Function|React.Component} options.render - Component render function or class\n * @returns {React.ForwardRefExoticComponent} Enhanced React component\n */\nexport function defineComponent({\n  name,\n  semantics = {},\n  props = {},\n  render\n}) {\n  // Create component metadata\n  const metadata = createMetadata({\n    name,\n    purpose: semantics.purpose,\n    interactions: semantics.interactions,\n    props,\n    semantics\n  });\n  \n  // Create the enhanced component\n  const EnhancedComponent = forwardRef((props, ref) => {\n    const { registerComponent, unregisterComponent, debug } = useAartisanContext();\n    const componentId = useId();\n    \n    useEffect(() => {\n      // Register component when mounted\n      registerComponent(componentId, {\n        ...metadata,\n        instanceProps: props\n      });\n      \n      // Unregister when unmounted\n      return () => {\n        unregisterComponent(componentId);\n      };\n    }, []);\n    \n    // Log render if in debug mode\n    if (debug) {\n      console.log(`[Aartisan] Rendering ${name}`, { props, metadata });\n    }\n    \n    // Add semantic metadata to rendered output\n    const dataAttributes = {\n      'data-aartisan': true,\n      'data-aartisan-id': componentId,\n      'data-aartisan-name': name,\n      'data-aartisan-purpose': semantics.purpose || ''\n    };\n    \n    // Call the render function with props and ref\n    const rendered = render({ ...props, ref });\n    \n    // If the rendered result is a React element, clone it and add metadata\n    if (React.isValidElement(rendered)) {\n      return React.cloneElement(rendered, {\n        ...rendered.props,\n        ...dataAttributes,\n        ref: rendered.ref || ref\n      });\n    }\n    \n    // Otherwise, wrap it in a div with metadata\n    return (\n      <div {...dataAttributes}>\n        {rendered}\n      </div>\n    );\n  });\n  \n  // Add metadata to component for introspection\n  EnhancedComponent.displayName = `Aartisan(${name})`;\n  EnhancedComponent.__aartisan = metadata;\n  \n  // Add static methods for metadata access\n  EnhancedComponent.getMetadata = () => metadata;\n  EnhancedComponent.getSemantics = () => semantics;\n  \n  return EnhancedComponent;\n}"],"names":["defineComponent","name","semantics","props","render","metadata","createMetadata","purpose","interactions","EnhancedComponent","forwardRef","ref","registerComponent","unregisterComponent","debug","useAartisanContext","componentId","useId","useEffect","instanceProps","console","log","dataAttributes","rendered","React","isValidElement","cloneElement","createElement","displayName","__aartisan","getMetadata","getSemantics"],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,eAAeA,CAAC;EAC9BC,IAAI;EACJC,SAAS,GAAG,EAAE;EACdC,KAAK,GAAG,EAAE;AACVC,EAAAA;AACF,CAAC,EAAE;AACD;EACA,MAAMC,QAAQ,GAAGC,cAAc,CAAC;IAC9BL,IAAI;IACJM,OAAO,EAAEL,SAAS,CAACK,OAAO;IAC1BC,YAAY,EAAEN,SAAS,CAACM,YAAY;IACpCL,KAAK;AACLD,IAAAA;AACF,GAAC,CAAC;;AAEF;EACA,MAAMO,iBAAiB,gBAAGC,UAAU,CAAC,CAACP,KAAK,EAAEQ,GAAG,KAAK;IACnD,MAAM;MAAEC,iBAAiB;MAAEC,mBAAmB;AAAEC,MAAAA;KAAO,GAAGC,kBAAkB,EAAE;AAC9E,IAAA,MAAMC,WAAW,GAAGC,KAAK,EAAE;AAE3BC,IAAAA,SAAS,CAAC,MAAM;AACd;MACAN,iBAAiB,CAACI,WAAW,EAAE;AAC7B,QAAA,GAAGX,QAAQ;AACXc,QAAAA,aAAa,EAAEhB;AACjB,OAAC,CAAC;;AAEF;AACA,MAAA,OAAO,MAAM;QACXU,mBAAmB,CAACG,WAAW,CAAC;OACjC;KACF,EAAE,EAAE,CAAC;;AAEN;AACA,IAAA,IAAIF,KAAK,EAAE;AACTM,MAAAA,OAAO,CAACC,GAAG,CAAC,CAAwBpB,qBAAAA,EAAAA,IAAI,EAAE,EAAE;QAAEE,KAAK;AAAEE,QAAAA;AAAS,OAAC,CAAC;AAClE;;AAEA;AACA,IAAA,MAAMiB,cAAc,GAAG;AACrB,MAAA,eAAe,EAAE,IAAI;AACrB,MAAA,kBAAkB,EAAEN,WAAW;AAC/B,MAAA,oBAAoB,EAAEf,IAAI;AAC1B,MAAA,uBAAuB,EAAEC,SAAS,CAACK,OAAO,IAAI;KAC/C;;AAED;IACA,MAAMgB,QAAQ,GAAGnB,MAAM,CAAC;AAAE,MAAA,GAAGD,KAAK;AAAEQ,MAAAA;AAAI,KAAC,CAAC;;AAE1C;AACA,IAAA,iBAAIa,KAAK,CAACC,cAAc,CAACF,QAAQ,CAAC,EAAE;AAClC,MAAA,oBAAOC,KAAK,CAACE,YAAY,CAACH,QAAQ,EAAE;QAClC,GAAGA,QAAQ,CAACpB,KAAK;AACjB,QAAA,GAAGmB,cAAc;AACjBX,QAAAA,GAAG,EAAEY,QAAQ,CAACZ,GAAG,IAAIA;AACvB,OAAC,CAAC;AACJ;;AAEA;AACA,IAAA,oBACEa,KAAA,CAAAG,aAAA,QAASL,cAAc,EACpBC,QACE,CAAC;AAEV,GAAC,CAAC;;AAEF;AACAd,EAAAA,iBAAiB,CAACmB,WAAW,GAAG,CAAA,SAAA,EAAY3B,IAAI,CAAG,CAAA,CAAA;EACnDQ,iBAAiB,CAACoB,UAAU,GAAGxB,QAAQ;;AAEvC;AACAI,EAAAA,iBAAiB,CAACqB,WAAW,GAAG,MAAMzB,QAAQ;AAC9CI,EAAAA,iBAAiB,CAACsB,YAAY,GAAG,MAAM7B,SAAS;AAEhD,EAAA,OAAOO,iBAAiB;AAC1B;;;;"}