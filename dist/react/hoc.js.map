{"version":3,"file":"hoc.js","sources":["../../src/react/hoc.jsx"],"sourcesContent":["import React, { forwardRef, useId } from 'react';\nimport { useAartisanContext } from './provider.jsx';\nimport { createMetadata } from '../core/metadata.js';\n\n/**\n * Higher-order component to enhance a component with AI metadata\n * @param {Object} options - Enhancement options\n * @param {string} options.name - Component name\n * @param {Object} options.semantics - Semantic metadata\n * @returns {Function} HOC wrapper function\n */\nexport function withAIEnhancement(options = {}) {\n  const { name, semantics = {} } = options;\n  \n  // Create metadata\n  const metadata = createMetadata({\n    name: name || 'EnhancedComponent',\n    purpose: semantics.purpose,\n    interactions: semantics.interactions,\n    semantics\n  });\n  \n  // Return the HOC\n  return (WrappedComponent) => {\n    // Create an enhanced component\n    const EnhancedComponent = forwardRef((props, ref) => {\n      const componentId = useId();\n      const { registerComponent, unregisterComponent } = useAartisanContext();\n      \n      // Register on mount\n      React.useEffect(() => {\n        registerComponent(componentId, {\n          ...metadata,\n          instanceProps: props\n        });\n        \n        return () => {\n          unregisterComponent(componentId);\n        };\n      }, []);\n      \n      // Data attributes for AI understanding\n      const aiProps = {\n        'data-aartisan': true,\n        'data-aartisan-id': componentId,\n        'data-aartisan-name': metadata.name,\n        'data-aartisan-purpose': semantics.purpose || ''\n      };\n      \n      // Render the wrapped component with AI props\n      return <WrappedComponent {...props} {...aiProps} ref={ref} />;\n    });\n    \n    // Add metadata and display name\n    EnhancedComponent.displayName = `withAIEnhancement(${\n      WrappedComponent.displayName || WrappedComponent.name || 'Component'\n    })`;\n    EnhancedComponent.__aartisan = metadata;\n    \n    return EnhancedComponent;\n  };\n}\n\n/**\n * Higher-order component to provide AI context\n * @param {Object} context - AI context data\n * @returns {Function} HOC wrapper function\n */\nexport function withAIContext(context = {}) {\n  return (WrappedComponent) => {\n    // Create a context provider component\n    const WithAIContext = (props) => {\n      const { updateSemanticContext } = useAartisanContext();\n      \n      // Update context on mount\n      React.useEffect(() => {\n        updateSemanticContext(context);\n      }, []);\n      \n      // Render the wrapped component\n      return <WrappedComponent {...props} />;\n    };\n    \n    // Add display name\n    WithAIContext.displayName = `withAIContext(${\n      WrappedComponent.displayName || WrappedComponent.name || 'Component'\n    })`;\n    \n    return WithAIContext;\n  };\n}"],"names":["withAIEnhancement","options","name","semantics","metadata","createMetadata","purpose","interactions","WrappedComponent","EnhancedComponent","forwardRef","props","ref","componentId","useId","registerComponent","unregisterComponent","useAartisanContext","React","useEffect","instanceProps","aiProps","createElement","_extends","displayName","__aartisan","withAIContext","context","WithAIContext","updateSemanticContext"],"mappings":";;;;;;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,iBAAiBA,CAACC,OAAO,GAAG,EAAE,EAAE;EAC9C,MAAM;IAAEC,IAAI;AAAEC,IAAAA,SAAS,GAAG;AAAG,GAAC,GAAGF,OAAO;;AAExC;EACA,MAAMG,QAAQ,GAAGC,cAAc,CAAC;IAC9BH,IAAI,EAAEA,IAAI,IAAI,mBAAmB;IACjCI,OAAO,EAAEH,SAAS,CAACG,OAAO;IAC1BC,YAAY,EAAEJ,SAAS,CAACI,YAAY;AACpCJ,IAAAA;AACF,GAAC,CAAC;;AAEF;AACA,EAAA,OAAQK,gBAAgB,IAAK;AAC3B;IACA,MAAMC,iBAAiB,gBAAGC,UAAU,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;AACnD,MAAA,MAAMC,WAAW,GAAGC,KAAK,EAAE;MAC3B,MAAM;QAAEC,iBAAiB;AAAEC,QAAAA;OAAqB,GAAGC,kBAAkB,EAAE;;AAEvE;MACAC,KAAK,CAACC,SAAS,CAAC,MAAM;QACpBJ,iBAAiB,CAACF,WAAW,EAAE;AAC7B,UAAA,GAAGT,QAAQ;AACXgB,UAAAA,aAAa,EAAET;AACjB,SAAC,CAAC;AAEF,QAAA,OAAO,MAAM;UACXK,mBAAmB,CAACH,WAAW,CAAC;SACjC;OACF,EAAE,EAAE,CAAC;;AAEN;AACA,MAAA,MAAMQ,OAAO,GAAG;AACd,QAAA,eAAe,EAAE,IAAI;AACrB,QAAA,kBAAkB,EAAER,WAAW;QAC/B,oBAAoB,EAAET,QAAQ,CAACF,IAAI;AACnC,QAAA,uBAAuB,EAAEC,SAAS,CAACG,OAAO,IAAI;OAC/C;;AAED;MACA,oBAAOY,KAAA,CAAAI,aAAA,CAACd,gBAAgB,EAAAe,QAAA,CAAA,EAAA,EAAKZ,KAAK,EAAMU,OAAO,EAAA;AAAET,QAAAA,GAAG,EAAEA;AAAI,OAAA,CAAE,CAAC;AAC/D,KAAC,CAAC;;AAEF;AACAH,IAAAA,iBAAiB,CAACe,WAAW,GAAG,CAAA,kBAAA,EAC9BhB,gBAAgB,CAACgB,WAAW,IAAIhB,gBAAgB,CAACN,IAAI,IAAI,WAAW,CACnE,CAAA,CAAA;IACHO,iBAAiB,CAACgB,UAAU,GAAGrB,QAAQ;AAEvC,IAAA,OAAOK,iBAAiB;GACzB;AACH;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASiB,aAAaA,CAACC,OAAO,GAAG,EAAE,EAAE;AAC1C,EAAA,OAAQnB,gBAAgB,IAAK;AAC3B;IACA,MAAMoB,aAAa,GAAIjB,KAAK,IAAK;MAC/B,MAAM;AAAEkB,QAAAA;OAAuB,GAAGZ,kBAAkB,EAAE;;AAEtD;MACAC,KAAK,CAACC,SAAS,CAAC,MAAM;QACpBU,qBAAqB,CAACF,OAAO,CAAC;OAC/B,EAAE,EAAE,CAAC;;AAEN;AACA,MAAA,oBAAOT,KAAA,CAAAI,aAAA,CAACd,gBAAgB,EAAKG,KAAQ,CAAC;KACvC;;AAED;AACAiB,IAAAA,aAAa,CAACJ,WAAW,GAAG,CAAA,cAAA,EAC1BhB,gBAAgB,CAACgB,WAAW,IAAIhB,gBAAgB,CAACN,IAAI,IAAI,WAAW,CACnE,CAAA,CAAA;AAEH,IAAA,OAAO0B,aAAa;GACrB;AACH;;;;"}