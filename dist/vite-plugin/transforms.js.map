{"version":3,"file":"transforms.js","sources":["../../src/vite-plugin/transforms.js"],"sourcesContent":["/**\n * aartisan - JSX transformation utilities\n */\nimport * as babel from '@babel/core';\nimport * as parser from '@babel/parser';\nimport traverse from '@babel/traverse';\nimport * as t from '@babel/types';\nimport generate from '@babel/generator';\nimport path from 'path';\nimport fs from 'fs-extra';\n\n/**\n * Transforms JSX code for AI optimization\n * @param {string} code - Source code\n * @param {string} fileName - File name\n * @param {Object} options - Transformation options\n * @returns {Object} Transformed code and metadata\n */\nexport async function transformJSX(code, fileName, options) {\n  // Parse the code\n  const ast = parser.parse(code, {\n    sourceType: 'module',\n    plugins: ['jsx', 'typescript']\n  });\n  \n  // Store component metadata\n  const metadata = [];\n  \n  // Traverse the AST\n  traverse.default(ast, {\n    // Find component declarations\n    FunctionDeclaration(path) {\n      if (isReactComponent(path)) {\n        processComponent(path, metadata, options);\n      }\n    },\n    // Find arrow function components\n    VariableDeclarator(path) {\n      if (t.isArrowFunctionExpression(path.node.init) && isReactComponent(path)) {\n        processComponent(path, metadata, options);\n      }\n    },\n    // Find comment directives\n    Program(path) {\n      path.traverse({\n        // Look for comment directives\n        JSXElement(jsxPath) {\n          const comments = getLeadingComments(jsxPath);\n          if (comments.some(comment => comment.includes('@aartisan'))) {\n            processCommentDirectives(jsxPath, comments, metadata, options);\n          }\n        }\n      });\n    }\n  });\n  \n  // Generate the transformed code\n  const output = generate.default(ast, {\n    retainLines: true,\n    comments: true\n  }, code);\n  \n  return {\n    code: output.code,\n    map: output.map,\n    metadata\n  };\n}\n\n/**\n * Checks if a node represents a React component\n * @param {Object} path - Babel path\n * @returns {boolean} Whether it's a React component\n */\nfunction isReactComponent(path) {\n  // For function declarations\n  if (t.isFunctionDeclaration(path.node)) {\n    // Check if it returns JSX\n    let returnsJSX = false;\n    path.traverse({\n      ReturnStatement(returnPath) {\n        const returnArg = returnPath.node.argument;\n        if (t.isJSXElement(returnArg) || t.isJSXFragment(returnArg)) {\n          returnsJSX = true;\n        }\n      }\n    });\n    return returnsJSX;\n  }\n  \n  // For arrow functions\n  if (t.isVariableDeclarator(path.node) && t.isArrowFunctionExpression(path.node.init)) {\n    const body = path.node.init.body;\n    return t.isJSXElement(body) || t.isJSXFragment(body);\n  }\n  \n  return false;\n}\n\n/**\n * Processes a component and extracts metadata\n * @param {Object} path - Babel path\n * @param {Array} metadata - Metadata array\n * @param {Object} options - Options\n */\nfunction processComponent(path, metadata, options) {\n  let componentName = '';\n  let props = [];\n  \n  // Get component name\n  if (t.isFunctionDeclaration(path.node)) {\n    componentName = path.node.id.name;\n  } else if (t.isVariableDeclarator(path.node)) {\n    componentName = path.node.id.name;\n  }\n  \n  // Extract props\n  if (t.isFunctionDeclaration(path.node) && path.node.params.length > 0) {\n    props = extractProps(path.node.params[0]);\n  } else if (t.isVariableDeclarator(path.node) && \n             path.node.init.params && \n             path.node.init.params.length > 0) {\n    props = extractProps(path.node.init.params[0]);\n  }\n  \n  // Extract purpose from comments or content\n  const purpose = inferPurpose(path, componentName);\n  \n  // Add to metadata\n  metadata.push({\n    name: componentName,\n    props,\n    purpose,\n    fileName: path.hub.file.opts.filename\n  });\n  \n  // Add data attributes to JSX if advanced optimization is enabled\n  if (options.optimizationLevel === 'advanced') {\n    addDataAttributes(path, componentName, purpose);\n  }\n}\n\n/**\n * Extracts props from a component parameter\n * @param {Object} param - Babel parameter node\n * @returns {Array} Array of prop metadata\n */\nfunction extractProps(param) {\n  const props = [];\n  \n  // Handle object pattern (destructured props)\n  if (t.isObjectPattern(param)) {\n    param.properties.forEach(prop => {\n      if (t.isObjectProperty(prop) && t.isIdentifier(prop.key)) {\n        props.push({\n          name: prop.key.name,\n          required: false\n        });\n      } else if (t.isRestElement(prop) && t.isIdentifier(prop.argument)) {\n        props.push({\n          name: prop.argument.name,\n          isRest: true\n        });\n      }\n    });\n  } \n  // Handle identifier (props as a single object)\n  else if (t.isIdentifier(param)) {\n    props.push({\n      name: param.name,\n      isObject: true\n    });\n  }\n  \n  return props;\n}\n\n/**\n * Infers the purpose of a component from its code and name\n * @param {Object} path - Babel path\n * @param {string} componentName - Component name\n * @returns {string} Inferred purpose\n */\nfunction inferPurpose(path, componentName) {\n  // Check for common naming patterns\n  if (/button/i.test(componentName)) {\n    return 'interactive-button';\n  } else if (/card/i.test(componentName)) {\n    return 'display-card';\n  } else if (/list/i.test(componentName)) {\n    return 'list-container';\n  } else if (/item/i.test(componentName)) {\n    return 'list-item';\n  } else if (/form/i.test(componentName)) {\n    return 'input-form';\n  } else if (/input/i.test(componentName)) {\n    return 'input-field';\n  } else if (/header/i.test(componentName)) {\n    return 'page-header';\n  } else if (/footer/i.test(componentName)) {\n    return 'page-footer';\n  } else if (/nav/i.test(componentName)) {\n    return 'navigation';\n  } else if (/modal/i.test(componentName)) {\n    return 'modal-dialog';\n  }\n  \n  return 'ui-component';\n}\n\n/**\n * Gets leading comments from a node\n * @param {Object} path - Babel path\n * @returns {Array} Array of comment strings\n */\nfunction getLeadingComments(path) {\n  const comments = [];\n  const node = path.node;\n  \n  if (node.leadingComments) {\n    node.leadingComments.forEach(comment => {\n      comments.push(comment.value.trim());\n    });\n  }\n  \n  return comments;\n}\n\n/**\n * Processes comment directives for a component\n * @param {Object} path - Babel path\n * @param {Array} comments - Comment strings\n * @param {Array} metadata - Metadata array\n * @param {Object} options - Options\n */\nfunction processCommentDirectives(path, comments, metadata, options) {\n  // Extract directives\n  const directives = {};\n  comments.forEach(comment => {\n    // Match @aartisan:key value\n    const matches = comment.match(/@aartisan:(\\w+)(?:\\s+(.+))?/g);\n    if (matches) {\n      matches.forEach(match => {\n        const [, key, value] = match.match(/@aartisan:(\\w+)(?:\\s+(.+))?/);\n        directives[key] = value || true;\n      });\n    }\n  });\n  \n  // If we have directives, add data attributes\n  if (Object.keys(directives).length > 0) {\n    const openingElement = path.node.openingElement;\n    \n    // Add data-aartisan attribute\n    openingElement.attributes.push(\n      t.jsxAttribute(\n        t.jsxIdentifier('data-aartisan'),\n        t.stringLiteral('true')\n      )\n    );\n    \n    // Add other directive attributes\n    Object.entries(directives).forEach(([key, value]) => {\n      if (value !== true) {\n        openingElement.attributes.push(\n          t.jsxAttribute(\n            t.jsxIdentifier(`data-aartisan-${key}`),\n            t.stringLiteral(value)\n          )\n        );\n      }\n    });\n    \n    // Add to metadata\n    metadata.push({\n      elementType: openingElement.name.name,\n      directives,\n      fileName: path.hub.file.opts.filename\n    });\n  }\n}\n\n/**\n * Adds data attributes to a component's JSX\n * @param {Object} path - Babel path\n * @param {string} componentName - Component name\n * @param {string} purpose - Component purpose\n */\nfunction addDataAttributes(path, componentName, purpose) {\n  path.traverse({\n    JSXElement(jsxPath) {\n      // Only add to the root JSX element in the component\n      if (jsxPath.parent && \n          (t.isReturnStatement(jsxPath.parent) || \n           t.isArrowFunctionExpression(jsxPath.parent))) {\n        const openingElement = jsxPath.node.openingElement;\n        \n        // Add data-aartisan attribute\n        openingElement.attributes.push(\n          t.jsxAttribute(\n            t.jsxIdentifier('data-aartisan'),\n            t.stringLiteral('true')\n          )\n        );\n        \n        // Add component name attribute\n        openingElement.attributes.push(\n          t.jsxAttribute(\n            t.jsxIdentifier('data-aartisan-component'),\n            t.stringLiteral(componentName)\n          )\n        );\n        \n        // Add purpose attribute\n        if (purpose) {\n          openingElement.attributes.push(\n            t.jsxAttribute(\n              t.jsxIdentifier('data-aartisan-purpose'),\n              t.stringLiteral(purpose)\n            )\n          );\n        }\n      }\n    }\n  });\n}\n\n/**\n * Generates a metadata file with component information\n * @param {Map} metadataCache - Metadata cache\n * @param {Object} options - Options\n * @returns {Promise<void>}\n */\nexport async function generateMetadata(metadataCache, options) {\n  const outputFile = path.resolve(process.cwd(), 'dist', 'aartisan-metadata.json');\n  \n  // Ensure output directory exists\n  await fs.ensureDir(path.dirname(outputFile));\n  \n  // Merge all metadata\n  const allMetadata = [];\n  metadataCache.forEach((fileMetadata, fileName) => {\n    fileMetadata.forEach(item => {\n      allMetadata.push({\n        ...item,\n        fileName: path.relative(process.cwd(), fileName)\n      });\n    });\n  });\n  \n  // Add global metadata\n  const metadata = {\n    version: '0.1.0',\n    generated: new Date().toISOString(),\n    optimizationLevel: options.optimizationLevel,\n    accessibilityFeatures: options.accessibilityFeatures,\n    culturalContexts: options.culturalContexts,\n    components: allMetadata\n  };\n  \n  // Write metadata file\n  await fs.writeJson(outputFile, metadata, { spaces: 2 });\n  \n  if (options.verbose) {\n    console.log(`[Aartisan] Metadata generated at ${outputFile}`);\n    console.log(`[Aartisan] Found ${allMetadata.length} components`);\n  }\n}"],"names":["transformJSX","code","fileName","options","ast","parser","parse","sourceType","plugins","metadata","traverse","default","FunctionDeclaration","path","isReactComponent","processComponent","VariableDeclarator","t","isArrowFunctionExpression","node","init","Program","JSXElement","jsxPath","comments","getLeadingComments","some","comment","includes","processCommentDirectives","output","generate","retainLines","map","isFunctionDeclaration","returnsJSX","ReturnStatement","returnPath","returnArg","argument","isJSXElement","isJSXFragment","isVariableDeclarator","body","componentName","props","id","name","params","length","extractProps","purpose","inferPurpose","push","hub","file","opts","filename","optimizationLevel","addDataAttributes","param","isObjectPattern","properties","forEach","prop","isObjectProperty","isIdentifier","key","required","isRestElement","isRest","isObject","test","leadingComments","value","trim","directives","matches","match","Object","keys","openingElement","attributes","jsxAttribute","jsxIdentifier","stringLiteral","entries","elementType","parent","isReturnStatement","generateMetadata","metadataCache","outputFile","resolve","process","cwd","fs","ensureDir","dirname","allMetadata","fileMetadata","item","relative","version","generated","Date","toISOString","accessibilityFeatures","culturalContexts","components","writeJson","spaces","verbose","console","log"],"mappings":"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"}